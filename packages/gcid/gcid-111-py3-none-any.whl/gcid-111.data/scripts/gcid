#!python
# This file is placed in the Public Domain.


"Prosecutor. Court. Reconsider OTP-CR-117/19."


import os
import readline
import sys
import termios
import time
import traceback


sys.path.insert(0, os.getcwd())



from gcid.object import Config
from gcid.version import __version__


Config.console = False
Config.name = "gcid"
Config.threaded = False
Config.version = __version__
Config.workdir = os.path.expanduser("~/.%s" % Config.name)


from gcid.irc import Config as IConfig


IConfig.realname = "Prosecutor. Court. Reconsider OTP-CR-117/19."


from gcid.object import Class, Db, Object
from gcid.object import cdir, find, fntime, format, get, items, save, spl, update
from gcid.handler import Callbacks, CLI, Commands, Console, Event, Handler, Table
from gcid.handler import boot, getname, init, starttime


from gcid import basic 
from gcid import irc
from gcid import model
from gcid import rss


Table.add(basic)
Table.add(irc)
Table.add(model)
Table.add(rss)


class CLI(CLI):

    def raw(self, txt):
        print(txt)


class Console(Console):

    def announce(self, txt):
        pass

    def raw(self, txt):
        print(txt)


def from_exception(ex, catch=None):
    result = []
    for fr in traceback.extract_tb(ex.__traceback__):
        fnc = str(fr).split()[-1][:-1]
        nme = os.sep.join(fr.filename.split(os.sep)[-2:])
        if catch and catch not in nme:
            continue
        result.append("%s %s.%s" % (nme, fnc, fr.lineno))
    return "\n%s -> %s %s" % (" -> ".join(result), getname(ex), ex)


def wait():
    while 1:
        time.sleep(1.0)
        for err in Callbacks.errors:
            print(from_exception(err, Config.name))
            Callbacks.errors.remove(err)


def wrap(func):
    fd = sys.stdin.fileno()
    old = termios.tcgetattr(fd)
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old)
            

def main():
    boot(" ".join(sys.argv[1:]))
    cdir(Config.workdir)
    if Config.txt:
        init("basic,irc,model,rss", Config.name, "reg")
        c = CLI()
        return c.cmd(Config.otxt)
    if Config.console:
        print("%s shell started at %s" % (Config.name.upper(), time.ctime(starttime).replace("  ", " ")))
        init("basic,irc,model,rss", "gcid", "reg")
        init("irc,model,rss", "gcid")
        print(format(Config, skip="password,type"))
        c = Console()
        c.start()
        wait()


wrap(main)
