# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: i18n.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from . import i18n_pb2


class I18nBase(abc.ABC):

    @abc.abstractmethod
    async def translate(self, stream: 'grpclib.server.Stream[i18n_pb2.Translate, i18n_pb2.TranslateA]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/I18n/translate': grpclib.const.Handler(
                self.translate,
                grpclib.const.Cardinality.UNARY_UNARY,
                i18n_pb2.Translate,
                i18n_pb2.TranslateA,
            ),
        }


class I18nStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.translate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/I18n/translate',
            i18n_pb2.Translate,
            i18n_pb2.TranslateA,
        )
