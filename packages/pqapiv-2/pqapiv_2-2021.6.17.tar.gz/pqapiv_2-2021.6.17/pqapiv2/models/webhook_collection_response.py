# -*- coding: utf-8 -*-

"""
pqapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pqapiv2.models.haetos_params import HaetosParams
from pqapiv2.models.webhook_subscription_response import WebhookSubscriptionResponse


class WebhookCollectionResponse(object):

    """Implementation of the 'webhookCollection-Response' model.

    Webhook Subscription collection response

    Attributes:
        links (list of HaetosParams): TODO: type description here.
        payload (list of WebhookSubscriptionResponse): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "links": 'links',
        "payload": 'payload'
    }

    def __init__(self,
                 links=None,
                 payload=None):
        """Constructor for the WebhookCollectionResponse class"""

        # Initialize members of the class
        self.links = links
        self.payload = payload

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        links = None
        if dictionary.get('links') is not None:
            links = [HaetosParams.from_dictionary(x) for x in dictionary.get('links')]
        payload = None
        if dictionary.get('payload') is not None:
            payload = [WebhookSubscriptionResponse.from_dictionary(x) for x in dictionary.get('payload')]

        # Return an object of this model
        return cls(links,
                   payload)
