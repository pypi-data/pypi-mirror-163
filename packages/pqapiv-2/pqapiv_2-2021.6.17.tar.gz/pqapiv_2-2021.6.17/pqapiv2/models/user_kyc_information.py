# -*- coding: utf-8 -*-

"""
pqapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class UserKycInformation(object):

    """Implementation of the '_userKycInformation' model.

    TODO: type model description here.

    Attributes:
        driver_license_id (string): User's driver's license number
        passport_id (string): User's passport number
        government_id_type (GovernmentIdTypeEnum): User's government ID type
        government_id (string): User's government ID number, such as a
            <i>SSN</i>, <i>EIN</i>, or <i>SIN</i>

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "driver_license_id": 'driverLicenseId',
        "passport_id": 'passportId',
        "government_id_type": 'governmentIdType',
        "government_id": 'governmentId'
    }

    def __init__(self,
                 driver_license_id=None,
                 passport_id=None,
                 government_id_type=None,
                 government_id=None):
        """Constructor for the UserKycInformation class"""

        # Initialize members of the class
        self.driver_license_id = driver_license_id
        self.passport_id = passport_id
        self.government_id_type = government_id_type
        self.government_id = government_id

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        driver_license_id = dictionary.get('driverLicenseId')
        passport_id = dictionary.get('passportId')
        government_id_type = dictionary.get('governmentIdType')
        government_id = dictionary.get('governmentId')

        # Return an object of this model
        return cls(driver_license_id,
                   passport_id,
                   government_id_type,
                   government_id)
