# -*- coding: utf-8 -*-

"""
pqapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Balance(object):

    """Implementation of the 'balance' model.

    Account monetary balance

    Attributes:
        formatted_amount (string): Formatted monetary amount
        amount (float): Amount of the transfer in the specified currency.
        currency (CurrencyTypesEnum): Currency code type for the object
        token (string): Token representing the resource, prefixed with
            <i>user-</i>, <i>dest-</i>, <i>xfer-</i>, <i>acct-</i>,
            <i>pmnt-</i>, or <i>docu-</i>.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "amount": 'amount',
        "currency": 'currency',
        "formatted_amount": 'formattedAmount',
        "token": 'token'
    }

    def __init__(self,
                 amount=None,
                 currency=None,
                 formatted_amount=None,
                 token=None):
        """Constructor for the Balance class"""

        # Initialize members of the class
        self.formatted_amount = formatted_amount
        self.amount = amount
        self.currency = currency
        self.token = token

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        amount = dictionary.get('amount')
        currency = dictionary.get('currency')
        formatted_amount = dictionary.get('formattedAmount')
        token = dictionary.get('token')

        # Return an object of this model
        return cls(amount,
                   currency,
                   formatted_amount,
                   token)
