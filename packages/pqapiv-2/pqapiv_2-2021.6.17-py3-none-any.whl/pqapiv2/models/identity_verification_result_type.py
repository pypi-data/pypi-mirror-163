# -*- coding: utf-8 -*-

"""
pqapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class IdentityVerificationResultType(object):

    """Implementation of the '_identityVerificationResultType' model.

    In combination with the <i>Disposition</i> type, the <i>Result</i> type
    provides the results of an IDV check. A <i>Dispositioned</i> result of
    <i>FINAL PASS</i> represents a passing check, whereas a <i>TRANSIENT
    FAIL</i> is still being processed but has failed at least one phase of the
    check. Until the disposition is <i>FINAL</i>, a result has not been
    determined.

    Attributes:
        idv_result (IdentityVerificationResultTypesEnum): In combination with
            the <i>Disposition</i> type, the <i>Result</i> type provides the
            results of an IDV check. A <i>Dispositioned</i> result of <i>FINAL
            PASS</i> represents a passing check, whereas a <i>TRANSIENT
            FAIL</i> is still being processed but has failed at least one
            phase of the check. Until the disposition is <i>FINAL</i>, a
            result has not been determined.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "idv_result": 'idvResult'
    }

    def __init__(self,
                 idv_result=None):
        """Constructor for the IdentityVerificationResultType class"""

        # Initialize members of the class
        self.idv_result = idv_result

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        idv_result = dictionary.get('idvResult')

        # Return an object of this model
        return cls(idv_result)
