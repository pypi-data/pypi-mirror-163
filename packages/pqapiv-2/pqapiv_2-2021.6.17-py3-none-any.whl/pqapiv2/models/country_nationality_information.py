# -*- coding: utf-8 -*-

"""
pqapiv2

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CountryNationalityInformation(object):

    """Implementation of the '_countryNationalityInformation' model.

    TODO: type model description here.

    Attributes:
        country_of_birth (CountryTypesEnum): Two-digit country code types
        country_of_nationality (CountryTypesEnum): Two-digit country code
            types

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "country_of_birth": 'countryOfBirth',
        "country_of_nationality": 'countryOfNationality'
    }

    def __init__(self,
                 country_of_birth=None,
                 country_of_nationality=None):
        """Constructor for the CountryNationalityInformation class"""

        # Initialize members of the class
        self.country_of_birth = country_of_birth
        self.country_of_nationality = country_of_nationality

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        country_of_birth = dictionary.get('countryOfBirth')
        country_of_nationality = dictionary.get('countryOfNationality')

        # Return an object of this model
        return cls(country_of_birth,
                   country_of_nationality)
