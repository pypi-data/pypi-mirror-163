Metadata-Version: 2.1
Name: pawpyrus
Version: 2022.8.7.3
Summary: A minimalist paper data storage based on QR codes
Project-URL: Homepage, https://github.com/regnveig/pawpyrus
Project-URL: Bug Tracker, https://github.com/regnveig/pawpyrus/issues
Author-email: Emil Viesn√° <regnveig@yandex.ru>
Keywords: ArUco,QR,data storage,paper
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.8
Requires-Dist: bitarray>=1.6.3
Requires-Dist: more-itertools>=8.14.0
Requires-Dist: numpy>=1.23.1
Requires-Dist: opencv-contrib-python>=4.6.0.66
Requires-Dist: opencv-python>=4.6.0.66
Requires-Dist: pyzbar>=0.1.9
Requires-Dist: qrcode>=7.3.1
Requires-Dist: reportlab>=3.6.11
Requires-Dist: svglib>=1.4.1
Requires-Dist: tqdm>=4.63.0
Description-Content-Type: text/markdown

&nbsp;

![Logo](https://github.com/regnveig/pawpyrus/blob/main/logo.svg)

## Description

![PyPI](https://img.shields.io/pypi/v/pawpyrus?style=flat-square)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pawpyrus?style=flat-square)
![PyPI - Status](https://img.shields.io/pypi/status/pawpyrus?style=flat-square)
![PyPI - Downloads](https://img.shields.io/pypi/dm/pawpyrus?style=flat-square)
![GitHub last commit (branch)](https://img.shields.io/github/last-commit/regnveig/pawpyrus/sandbox?style=flat-square)
![GitHub issues](https://img.shields.io/github/issues-raw/regnveig/pawpyrus?style=flat-square)
![GitHub closed issues](https://img.shields.io/github/issues-closed-raw/regnveig/pawpyrus?style=flat-square)
![GitHub](https://img.shields.io/github/license/regnveig/pawpyrus?style=flat-square)
![Keybase PGP](https://img.shields.io/keybase/pgp/regnveig?style=flat-square)

pawpyrus is a minimalist open-source paper data storage based on QR codes and ArUco.
It generates a PDF from any small-sized binary file (recommended size 100kb or less).
Further, the paper data storage can be scanned and decoded (recommended resolution 300dpi or more).

It may be useful for:

* Storing encryption keys, password databases, etc.
* Faxing digital data

## Installation

The script is pure Python and a part of [PyPI](https://pypi.org/project/pawpyrus), so can be installed via *pip*:

```bash
python3 -m pip install pawpyrus
```

## Usage

File encoder:

```bash
pawpyrus Encode -n "Description" -i  "InputFile" -o "OutputPDF"
```

File decoder:

```bash
pawpyrus Decode -i "Scan1.jpg" "Scan2.jpg" "Scan3.jpg" -o  "OutputFile"
```

## Got a trouble?

**QR code detectors may fail on one or several blocks.**
This situation is totally normal, although uncomfortable.
I fixed it for now, with two detectors instead of one, but the bug may reappear in some circumstances (if blocks number is big enough, or scans quality is low enough).
That's why I implemented Debug Mode:

```bash
pawpyrus Decode -d "DebugDir" -i "Scan1.jpg" "Scan2.jpg" "Scan3.jpg" -o  "OutputFile"
```

With Debug Mode, you can inspect undetected QR codes, read them manually with any device you have, and create a file with codes contents which may be processed as well:

```bash
pawpyrus Decode "Scan1.jpg" "Scan2.jpg" "Scan3.jpg" -t "UnrecognizedCodes.txt" -o "OutputFile"
```

If you have any idea how to fix it better, [please help](https://github.com/regnveig/pawpyrus/issues/4).

## Contact

You can contact me by email: [regnveig@yandex.ru](mailto:regnveig@yandex.ru)
