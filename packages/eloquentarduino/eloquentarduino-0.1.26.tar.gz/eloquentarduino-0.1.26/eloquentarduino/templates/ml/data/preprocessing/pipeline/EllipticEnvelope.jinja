{% extends './templates/Step.jinja' %}

{% block public %}

    /**
     * @inplace
     */
    bool transform(float *source) {
        float mahalanobis = {{ offset }};
        float delta[{{ v | shape }}] = {{ -v | to_array }};

        for (uint16_t i = 0; i < {{ v | length }}; i++) {
            delta[i] += source[i];
        }

        // compute delta . VI . delta
        for (uint16_t i = 0; i < {{ v | length }}; i++) {
            mahalanobis -= delta[i] * dot(delta, VI[i]);
        }

        {% if add_feature %}
            source[{{ input_dim }}] = (mahalanobis < 0);
        {% elif predict %}
            source[0] = (mahalanobis < 0);
        {% else %}
            return mahalanobis >= 0;
        {% endif %}
    }

{% endblock %}

{% block protected %}

    float v[{{ v | shape }}] = {{ v | to_array }};
    {{ 'long' if approx else 'float' }} VI[{{ VI | shape }}] = {{ VI | to_array }};


    /**
     * Dot product
     */
    float dot(float *a, float *b) {
        float sum = 0;

        for (uint16_t i = 0; i < {{ v | length }}; i++) {
            sum += a[i] * b[i];
        }

        return sum;
    }

{% endblock %}