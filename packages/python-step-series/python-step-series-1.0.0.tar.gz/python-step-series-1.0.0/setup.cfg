[metadata]
name = python-step-series
description = A Python library for OSC communication with the Ponoor Step-series devices.
author = Julian_Orteil
author_email = 
license = MIT
license_files = LICENSE.txt
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/ponoor/python-step-series
project_urls = 
	Source = https://github.com/ponoor/python-step-series
	Changelog = https://github.com/ponoor/python-step-series/blob/main/CHANGELOG.rst
	Tracker = https://github.com/ponoor/python-step-series/issues
platforms = any
classifiers = 
	Development Status :: 2 - Pre-Alpha
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Intended Audience :: Developers
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
keywords = ponoor, step400, step800, motor

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir = 
	=src
python_requires = >=3.7
install_requires = 
	importlib-metadata; python_version<"3.8"
	python-osc

[options.packages.find]
where = src
exclude = 
	tests

[options.extras_require]
testing = 
	setuptools
	pytest
	pytest-cov
	pytest-order

[options.entry_points]

[tool:pytest]
addopts = 
	--cov stepseries --cov-report term-missing
	--verbose
norecursedirs = 
	dist
	build
	.tox
testpaths = tests
markers = 
	incremental: xfails further tests in a class if the current fails
	
	skip_400_disconnected: skips marked tests (or suites) if STEP400 hardware is not detected
	check_400_embrake: verifies configuration and device statuses before running tests that involve the EM-brake
	check_400_homesw: verifies configuration and device statuses before running tests that involve the home sw
	check_400_limitsw: verifies configuration and device statuses before running tests that involve the limit sw
	check_400_motors: verifies configuration and device statuses before allowing a test to physically run motors
	reset_400_device: after a test suite (class) finishes, reset the device to provide a blank slate
	skip_400_not_configured: skips marked tests (or suites) if test presets have not been flagged as configured
	
	skip_800_disconnected: skips marked tests (or suites) if STEP800 hardware is not detected
	check_800_embrake: verifies configuration and device statuses before running tests that involve the EM-brake
	check_800_homesw: verifies configuration and device statuses before running tests that involve the home sw
	check_800_motors: verifies configuration and device statuses before allowing a test to physically run motors
	reset_800_device: after a test suite (class) finishes, reset the device to provide a blank slate
	skip_800_not_configured: skips marked tests (or suites) if test presets have not been flagged as configured

[devpi:upload]
no_vcs = 1
formats = bdist_wheel

[flake8]
max_methods = 100
extend_ignore = E203, W503
max-cognitive-score = 15
strictness = long
exclude = 
	.tox
	build
	dist
	.eggs
	docs/conf.py
	tests
ignore = D100,D104,D401,DAR103,DAR203,E800,N802,Q000,RST303,RST304,S101,W504,WPS326
per-file-ignores = 
	setup.py: WPS421, C813
	tests/conftest.py: D208, E800
format = wemake
show-source = True
max-line-length = 100
max-complexity = 6
docstring-style = sphinx

[isort]
include_trailing_comma = true
use_parentheses = true
multi_line_output = 3
line_length = 100

[mypy]
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true

[pyscaffold]
version = 4.1.1
package = stepseries
extensions = 
	no_skeleton
	pre_commit

[egg_info]
tag_build = 
tag_date = 0

