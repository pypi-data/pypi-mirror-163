# Tox configuration file
# Read more under https://tox.readthedocs.io/

[tox]
minversion = 3.15
envlist = py{37,38,39,310}
isolated_build = True


[testenv]
description = Invoke pytest to run automated tests
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    HOME
deps =
    -rrequirements.txt
extras =
    testing
commands =
    pytest --cov-report xml:coverage.xml --cov {posargs}


[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# NOTE: build is still experimental, please refer to the links for updates/issues
# https://setuptools.readthedocs.io/en/stable/build_meta.html#how-to-use-it
# https://github.com/pypa/pep517/issues/91
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build .
# By default `build` produces wheels, you can also explicitly use the flags `--sdist` and `--wheel`


[testenv:{docs,doctests,linkcheck}]
description =
    docs: Invoke sphinx-build to build the docs
    doctests: Invoke sphinx-build to run doctests
    linkcheck: Check for broken links in the documentation
changedir={toxinidir}/docs
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    SPHINXINTL_LANGUAGE=ja
    docs: BUILD = html
    doctests: BUILD = doctest
    linkcheck: BUILD = linkcheck
deps =
    -r {toxinidir}/docs/requirements.txt
    # ^  requirements.txt shared with Read The Docs
commands =
    sphinx-build -b gettext . _build/gettext
    sphinx-intl update -p _build/gettext
    sphinx-build --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}


[testenv:lint]
description =
    Invoke flake8 to lint the package and ensure code follows established norms.
skip_install = True
changedir={toxinidir}
deps = flake8
commands =
    flake8 .


[testenv:publish]
description =
    Publish the package to PyPI. By default, it uses testpypi, but to make it
    publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
    DBUS_SESSION_BUS_ADDRESS
deps =
    twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*
