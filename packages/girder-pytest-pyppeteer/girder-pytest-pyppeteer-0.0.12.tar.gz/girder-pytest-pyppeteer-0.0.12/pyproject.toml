[tool.black]
line-length = 100
skip-string-normalization = true
target-version = ["py39"]
exclude='\.eggs|\.git|\.mypy_cache|\.tox|\.venv|_build|buck-out|build|dist'

[tool.isort]
profile = "black"
line_length = 100
# Sort by name, don't cluster "from" vs "import"
force_sort_within_sections = true
# Combines "as" imports on the same line
combine_as_imports = true

[tool.mypy]
exclude = "test-app|test-client"
ignore_missing_imports = true

[tool.poetry]
name = "girder-pytest-pyppeteer"
version = "0.0.12"
description = "Pytest plugin for using pyppeteer to test Girder 4 applications"
authors = ["Kitware, Inc. <kitware@kitware.com>"]
license = "Apache License 2.0"
classifiers = ["Framework :: Pytest"]

[tool.poetry.dependencies]
python = "^3.7"
pytest = "^7.0.1"
# dependencies to run pyppeteer tests
pyppeteer = {version = "^1.0.2", optional = true}
pytest-asyncio = {version = "^0.18.1", optional = true}
mkdocs = {version = "^1.3.0", optional = true}
mkdocstrings = {version = "^0.18.1", optional = true}
mkdocs-material = {version = "^8.2.8", optional = true}
mkdocs-macros-plugin = {version = "^0.7.0", optional = true}

[tool.poetry.extras]
pyppeteer = [
    "pyppeteer",
    "pytest-asyncio"
]
docs = [
    "mkdocs",
    "mkdocstrings",
    "mkdocs-material",
    "mkdocs-macros-plugin"
]

[tool.poetry.plugins.pytest11]
pyppeteer = "girder_pytest_pyppeteer.plugin"

[tool.poetry.plugins.console_scripts]
pytest-docker = "girder_pytest_pyppeteer.main:run_pytest_docker_compose"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
