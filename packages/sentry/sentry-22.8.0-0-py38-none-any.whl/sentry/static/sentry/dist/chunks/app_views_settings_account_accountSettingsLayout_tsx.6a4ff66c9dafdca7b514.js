"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_views_settings_account_accountSettingsLayout_tsx"],{"./app/views/settings/account/accountSettingsLayout.tsx":(t,n,s)=>{s.r(n),s.d(n,{default:()=>m});var o=s("../node_modules/@babel/runtime/helpers/esm/defineProperty.js"),i=s("../node_modules/react/index.js"),e=s("./app/actionCreators/organizations.tsx"),a=s("./app/sentryTypes.tsx"),r=s("./app/utils/withLatestContext.tsx"),p=s("./app/views/settings/account/navigationConfiguration.tsx"),c=s("./app/views/settings/components/settingsNavigation.tsx"),g=s("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");const u=t=>{let{organization:n}=t;return(0,g.tZ)(c.Z,{navigationObjects:(0,p.Z)({organization:n})})};u.displayName="AccountSettingsNavigation";const d=u;var l=s("./app/views/settings/components/settingsLayout.tsx");class h extends i.Component{getChildContext(){return{organization:this.props.organization}}componentDidUpdate(t){const{organization:n}=this.props;t.organization!==n&&n&&void 0===n.access&&(0,e.h0)(n.slug,{setActive:!0,loadProjects:!0})}render(){const{organization:t}=this.props;return(0,g.tZ)(l.Z,{...this.props,renderNavigation:()=>(0,g.tZ)(d,{organization:t}),children:this.props.children})}}h.displayName="AccountSettingsLayout",(0,o.Z)(h,"childContextTypes",{organization:a.Z.Organization});const m=(0,r.Z)(h)}}]);
//# sourceMappingURL=../sourcemaps/app_views_settings_account_accountSettingsLayout_tsx.3ee1a4a3746ee9598a92cef634a9261a.js.map