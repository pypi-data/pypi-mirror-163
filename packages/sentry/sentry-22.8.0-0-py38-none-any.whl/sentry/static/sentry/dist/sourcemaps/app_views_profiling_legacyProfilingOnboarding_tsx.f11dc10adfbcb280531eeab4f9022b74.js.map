{"version":3,"file":"chunks/app_views_profiling_legacyProfilingOnboarding_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"s2BAsBe,SAASA,EAA0BC,GAOhD,OANAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,GAA4B,6BAA8B,CACxDC,aAAcH,EAAMG,iBAErB,CAACH,EAAMG,gBAGR,QAAC,IAAD,CAAqBC,OAAOC,EAAAA,EAAAA,GAAE,aAAcC,QAASN,EAAMG,aAAaI,KAAxE,UACE,QAACC,EAAD,WACE,QAACC,EAAD,YACE,QAAC,KAAD,YACGJ,EAAAA,EAAAA,GAAE,gCACH,QAAC,IAAD,CAAcK,KAAK,cAErB,QAACC,EAAD,YACE,uBACGN,EAAAA,EAAAA,GAAG,iVAMN,QAAC,IAAD,WACGA,EAAAA,EAAAA,GACE,iIAIL,QAACO,EAAD,CAAgBC,OAAO,kBAAvB,WACE,wBACGR,EAAAA,EAAAA,GACC,wFAGJ,yBACGA,EAAAA,EAAAA,GACE,wEACA,KACH,QAAC,IAAD,CACES,cAAY,EACZC,KAAK,8CAFP,UAIGV,EAAAA,EAAAA,GAAE,qDAGP,yBACGA,EAAAA,EAAAA,GAAE,qEACH,yBACE,yBAAQ,8KAOV,yBACE,yBACI,kRAQR,yBACGA,EAAAA,EAAAA,GAAE,0BAA2B,KAC9B,QAAC,IAAD,CAAcS,cAAY,EAACC,KAAK,8BAAhC,qBAEgB,KACfV,EAAAA,EAAAA,GACC,4KACC,KACH,QAAC,IAAD,CACES,cAAY,EACZC,KAAK,kGAFP,UAIGV,EAAAA,EAAAA,GAAE,yBAIP,QAACW,EAAD,YACE,QAAC,KAAD,CAAQC,SAAS,UAAUC,QAASlB,EAAMmB,YAA1C,UACGd,EAAAA,EAAAA,GAAE,eAEL,QAAC,KAAD,CAAQa,QAASlB,EAAMoB,eAAvB,UAAwCf,EAAAA,EAAAA,GAAE,6BAtFlCN,EAAAA,YAAAA,4BAgGxB,MAAMY,GAAU,OAAO,MAAP,sBAAH,WACDU,EAAAA,EAAAA,GAAM,GADL,OACaA,EAAAA,EAAAA,GAAM,GADnB,OAIPL,GAAU,OAAO,MAAP,sBAAH,eACGK,EAAAA,EAAAA,GAAM,GADT,2CAIMA,EAAAA,EAAAA,GAAM,GAJZ,MAQPb,GAAoB,OAAOc,EAAAA,GAAP,sBAAH,qBACDC,GAAKA,EAAEC,MAAMC,YADZ,KAIjBb,GAAiB,OAAOc,EAAAA,EAAP,sBAAH,qBAECL,EAAAA,EAAAA,GAAM,GAFP,wBAOdZ,GAAO,OAAO,MAAP,sBAAH,+CAIQY,EAAAA,EAAAA,GAAM,GAJd","sources":["webpack:///./app/views/profiling/legacyProfilingOnboarding.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types/organization';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\ninterface Props {\n  onDismissClick: () => void;\n  onDoneClick: () => void;\n  organization: Organization;\n}\n\nexport default function LegacyProfilingOnboarding(props: Props) {\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('profiling_views.onboarding', {\n      organization: props.organization,\n    });\n  }, [props.organization]);\n\n  return (\n    <SentryDocumentTitle title={t('Profiling')} orgSlug={props.organization.slug}>\n      <StyledPageContent>\n        <Main>\n          <Layout.Title>\n            {t('Welcome to Sentry Profiling')}\n            <FeatureBadge type=\"alpha\" />\n          </Layout.Title>\n          <Content>\n            <p>\n              {t(`With Sentry Profiling you can instrument your native iOS and Android apps to\n        collect profiles for your transactions. This gives you a unique insight into what\n        is on the execution stack at any point during the duration of the transaction.\n        Data is collected in production, on real devices with real users.`)}\n            </p>\n\n            <Alert>\n              {t(\n                `Profiling is only possible with sentry-cocoa and sentry-java SDKs right now. We don’t support React Native or Flutter yet.`\n              )}\n            </Alert>\n\n            <ProfilingSteps symbol=\"colored-numeric\">\n              <li>\n                {t(\n                  'Make sure your SDKs are upgraded to 6.0.0 (sentry-java) or 7.13.0 (sentry-cocoa).'\n                )}\n              </li>\n              <li>\n                {t(\n                  `Setup performance transactions in your app if you haven’t already → `\n                )}{' '}\n                <ExternalLink\n                  openInNewTab\n                  href=\"https://docs.sentry.io/product/performance/\"\n                >\n                  {t('https://docs.sentry.io/product/performance/')}\n                </ExternalLink>\n              </li>\n              <li>\n                {t('Enable profiling in your app by configuring the SDKs like below:')}\n                <pre>\n                  <code>{`SentrySDK.start { options in\n    options.dsn = \"...\"\n    options.tracesSampleRate = 1.0 // Make sure transactions are enabled\n    options.enableProfiling = true\n}`}</code>\n                </pre>\n\n                <pre>\n                  <code>\n                    {`<application>\n  <meta-data android:name=\"io.sentry.dsn\" android:value=\"...\" />\n  <meta-data android:name=\"io.sentry.traces.sample-rate\" android:value=\"1.0\" />\n  <meta-data android:name=\"io.sentry.traces.profiling.enable\" android:value=\"true\" />\n</application>`}\n                  </code>\n                </pre>\n              </li>\n              <li>\n                {t('Join the discussion on')}{' '}\n                <ExternalLink openInNewTab href=\"https://discord.gg/FvQuVVCD\">\n                  Discord\n                </ExternalLink>{' '}\n                {t(\n                  'or email us at profiling@sentry.io with any questions or if you need help setting it all up! There’s also a page with some more details and a troubleshooting section at'\n                )}{' '}\n                <ExternalLink\n                  openInNewTab\n                  href=\"https://sentry.notion.site/Profiling-Beta-Testing-Instructions-413ecdd9fcb34b3a8b57806280bf2ecb\"\n                >\n                  {t('our notion page')}\n                </ExternalLink>\n              </li>\n\n              <Actions>\n                <Button priority=\"primary\" onClick={props.onDoneClick}>\n                  {t(\"I'm done\")}\n                </Button>\n                <Button onClick={props.onDismissClick}>{t('Dismiss')}</Button>\n              </Actions>\n            </ProfilingSteps>\n          </Content>\n        </Main>\n      </StyledPageContent>\n    </SentryDocumentTitle>\n  );\n}\n\nconst Content = styled('div')`\n  margin: ${space(2)} 0 ${space(3)} 0;\n`;\n\nconst Actions = styled('div')`\n  margin-top: ${space(4)};\n\n  > button:not(:first-child) {\n    margin-left: ${space(2)};\n  }\n`;\n\nconst StyledPageContent = styled(PageContent)`\n  background-color: ${p => p.theme.background};\n`;\n\nconst ProfilingSteps = styled(List)`\n  li {\n    margin-bottom: ${space(1)};\n    position: relative;\n  }\n`;\n\nconst Main = styled('div')`\n  width: 100%;\n\n  pre:not(:last-child) {\n    margin-top: ${space(2)};\n  }\n`;\n"],"names":["LegacyProfilingOnboarding","props","useEffect","trackAdvancedAnalyticsEvent","organization","title","t","orgSlug","slug","StyledPageContent","Main","type","Content","ProfilingSteps","symbol","openInNewTab","href","Actions","priority","onClick","onDoneClick","onDismissClick","space","PageContent","p","theme","background","List"],"sourceRoot":""}