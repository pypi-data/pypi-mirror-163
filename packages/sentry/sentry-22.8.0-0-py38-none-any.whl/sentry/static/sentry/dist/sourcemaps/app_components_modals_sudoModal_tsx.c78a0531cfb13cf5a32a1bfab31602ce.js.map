{"version":3,"file":"chunks/app_components_modals_sudoModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/account.tsx","webpack:///./app/components/hook.tsx","webpack:///./app/components/u2f/u2fContainer.tsx","webpack:///./app/components/modals/sudoModal.tsx","webpack:///./app/components/u2f/webAuthnHelper.tsx","webpack:///./app/components/u2f/u2finterface.tsx","webpack:///./app/components/u2f/u2fsign.tsx","webpack:///./app/constants/superuserAccessErrors.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/withApi.tsx"],"sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {User, UserIdentityConfig} from 'sentry/types';\n\nexport async function disconnectIdentity(\n  identity: UserIdentityConfig,\n  onSuccess: {(): void}\n) {\n  const api = new Client();\n\n  try {\n    await api.requestPromise(\n      `/users/me/user-identities/${identity.category}/${identity.id}/`,\n      {\n        method: 'DELETE',\n      }\n    );\n  } catch {\n    addErrorMessage('Error disconnecting identity');\n    return;\n  }\n\n  addSuccessMessage(`Disconnected ${identity.provider.name}`);\n  onSuccess();\n}\n\nexport function updateUser(user: User) {\n  const previousUser = ConfigStore.get('user');\n\n  // If the user changed their theme preferences, we should also update\n  // the config store\n  if (\n    previousUser.options.theme !== user.options.theme &&\n    user.options.theme !== 'system'\n  ) {\n    ConfigStore.set('theme', user.options.theme);\n  }\n\n  // Ideally we'd fire an action but this is gonna get refactored soon anyway\n  ConfigStore.set('user', user);\n}\n\nexport function logout(api: Client) {\n  return api.requestPromise('/auth/', {method: 'DELETE'});\n}\n\nexport function removeAuthenticator(api: Client, userId: string, authId: string) {\n  return api.requestPromise(`/users/${userId}/authenticators/${authId}/`, {\n    method: 'DELETE',\n  });\n}\n","import {Component} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Props<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  name: H;\n  /**\n   * If children are provided as a function to the Hook, the hooks will be\n   * passed down as a render prop.\n   */\n  children?: (opts: {hooks: Array<Hooks[H]>}) => React.ReactNode;\n} & Omit<Parameters<Hooks[H]>[0], 'name'>;\n\ntype HookState<H extends HookName> = {\n  hooks: Array<Hooks[H]>;\n};\n\n/**\n * Instead of accessing the HookStore directly, use this.\n *\n * If the hook slot needs to perform anything w/ the hooks, you can pass a\n * function as a child and you will receive an object with a `hooks` key\n *\n * Example:\n *\n *   <Hook name=\"my-hook\">\n *     {({hooks}) => hooks.map(hook => (\n *       <Wrapper>{hook}</Wrapper>\n *     ))}\n *   </Hook>\n */\nfunction Hook<H extends HookName>({name, ...props}: Props<H>) {\n  class HookComponent extends Component<{}, HookState<H>> {\n    static displayName = `Hook(${name})`;\n\n    state = {\n      hooks: HookStore.get(name).map(cb => cb(props)),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    handleHooks(hookName: HookName, hooks: Array<Hooks[H]>) {\n      // Make sure that the incoming hook update matches this component's hook name\n      if (hookName !== name) {\n        return;\n      }\n\n      this.setState({hooks: hooks.map(cb => cb(props))});\n    }\n\n    unsubscribe = HookStore.listen(\n      (hookName: HookName, hooks: Array<Hooks[H]>) => this.handleHooks(hookName, hooks),\n      undefined\n    );\n\n    render() {\n      const {children} = props;\n\n      if (!this.state.hooks || !this.state.hooks.length) {\n        return null;\n      }\n\n      if (typeof children === 'function') {\n        return children({hooks: this.state.hooks});\n      }\n\n      return this.state.hooks;\n    }\n  }\n\n  return <HookComponent />;\n}\n\nexport default Hook;\n","import {Authenticator} from 'sentry/types';\n\nimport U2fSign from './u2fsign';\n\ntype U2FSignProps = React.ComponentProps<typeof U2fSign>;\n\ntype Props = {\n  authenticators: Array<Authenticator>;\n  onTap: U2FSignProps['onTap'];\n  className?: string;\n  displayMode?: U2FSignProps['displayMode'];\n};\n\nfunction U2fContainer({className, authenticators, ...props}: Props) {\n  if (!authenticators.length) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {authenticators.map(auth =>\n        auth.id === 'u2f' && auth.challenge ? (\n          <U2fSign key={auth.id} {...props} challengeData={auth.challenge} />\n        ) : null\n      )}\n    </div>\n  );\n}\n\nexport default U2fContainer;\n","import {Component, Fragment} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Form from 'sentry/components/forms/form';\nimport InputField from 'sentry/components/forms/inputField';\nimport Hook from 'sentry/components/hook';\nimport U2fContainer from 'sentry/components/u2f/u2fContainer';\nimport {ErrorCodes} from 'sentry/constants/superuserAccessErrors';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Authenticator} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype OnTapProps = NonNullable<React.ComponentProps<typeof U2fContainer>['onTap']>;\n\ntype Props = WithRouterProps &\n  Pick<ModalRenderProps, 'Body' | 'Header'> & {\n    api: Client;\n    closeModal: () => void;\n    /**\n     * User is a superuser without an active su session\n     */\n    isSuperuser?: boolean;\n    needsReload?: boolean;\n    /**\n     * expects a function that returns a Promise\n     */\n    retryRequest?: () => Promise<any>;\n  };\n\ntype State = {\n  authenticators: Array<Authenticator>;\n  busy: boolean;\n  error: boolean;\n  errorType: string;\n  superuserAccessCategory: string;\n  superuserReason: string;\n};\n\nclass SudoModal extends Component<Props, State> {\n  state: State = {\n    error: false,\n    errorType: '',\n    busy: false,\n    superuserAccessCategory: '',\n    superuserReason: '',\n    authenticators: [],\n  };\n\n  componentDidMount() {\n    this.getAuthenticators();\n  }\n\n  handleSubmit = async () => {\n    const {api, isSuperuser} = this.props;\n    const data = {\n      isSuperuserModal: isSuperuser,\n      superuserAccessCategory: 'cops_csm',\n      superuserReason: 'COPS and CSM use',\n    };\n    try {\n      await api.requestPromise('/auth/', {method: 'PUT', data});\n      this.handleSuccess();\n    } catch (err) {\n      this.handleError(err);\n    }\n  };\n\n  handleSuccess = () => {\n    const {closeModal, isSuperuser, location, needsReload, router, retryRequest} =\n      this.props;\n\n    if (!retryRequest) {\n      closeModal();\n      return;\n    }\n\n    if (isSuperuser) {\n      router.replace({pathname: location.pathname, state: {forceUpdate: new Date()}});\n      if (needsReload) {\n        window.location.reload();\n      }\n      return;\n    }\n\n    this.setState({busy: true}, () => {\n      retryRequest().then(() => {\n        this.setState({busy: false}, closeModal);\n      });\n    });\n  };\n\n  handleError = err => {\n    let errorType = '';\n    if (err.status === 403) {\n      errorType = ErrorCodes.invalidPassword;\n    } else if (err.status === 401) {\n      errorType = ErrorCodes.invalidSSOSession;\n    } else if (err.status === 400) {\n      errorType = ErrorCodes.invalidAccessCategory;\n    } else {\n      errorType = ErrorCodes.unknownError;\n    }\n    this.setState({\n      busy: false,\n      error: true,\n      errorType,\n    });\n  };\n\n  handleU2fTap = async (data: Parameters<OnTapProps>[0]) => {\n    this.setState({busy: true});\n\n    const {api, isSuperuser} = this.props;\n\n    try {\n      data.isSuperuserModal = isSuperuser;\n      data.superuserAccessCategory = this.state.superuserAccessCategory;\n      data.superuserReason = this.state.superuserReason;\n      await api.requestPromise('/auth/', {method: 'PUT', data});\n      this.handleSuccess();\n    } catch (err) {\n      this.setState({busy: false});\n      // u2fInterface relies on this\n      throw err;\n    }\n  };\n\n  handleLogout = async () => {\n    const {api} = this.props;\n    try {\n      await logout(api);\n    } catch {\n      // ignore errors\n    }\n    window.location.assign(`/auth/login/?next=${encodeURIComponent(location.pathname)}`);\n  };\n\n  async getAuthenticators() {\n    const {api} = this.props;\n\n    try {\n      const authenticators = await api.requestPromise('/authenticators/');\n      this.setState({authenticators: authenticators ?? []});\n    } catch {\n      // ignore errors\n    }\n  }\n\n  renderBodyContent() {\n    const {isSuperuser} = this.props;\n    const {authenticators, error, errorType} = this.state;\n    const user = ConfigStore.get('user');\n    const isSelfHosted = ConfigStore.get('isSelfHosted');\n    const validateSUForm = ConfigStore.get('validateSUForm');\n\n    if (errorType === ErrorCodes.invalidSSOSession) {\n      this.handleLogout();\n      return null;\n    }\n\n    if (\n      (!user.hasPasswordAuth && authenticators.length === 0) ||\n      (isSuperuser && !isSelfHosted && validateSUForm)\n    ) {\n      return (\n        <Fragment>\n          <StyledTextBlock>\n            {isSuperuser\n              ? t(\n                  'You are attempting to access a resource that requires superuser access, please re-authenticate as a superuser.'\n                )\n              : t('You will need to reauthenticate to continue')}\n          </StyledTextBlock>\n          {error && (\n            <StyledAlert type=\"error\" showIcon>\n              {t(errorType)}\n            </StyledAlert>\n          )}\n          {isSuperuser ? (\n            <Form\n              apiMethod=\"PUT\"\n              apiEndpoint=\"/auth/\"\n              submitLabel={t('Re-authenticate')}\n              onSubmitSuccess={this.handleSuccess}\n              onSubmitError={this.handleError}\n              initialData={{isSuperuserModal: isSuperuser}}\n              extraButton={\n                <BackWrapper>\n                  <Button onClick={this.handleSubmit}>{t('COPS/CSM')}</Button>\n                </BackWrapper>\n              }\n              resetOnError\n            >\n              {!isSelfHosted && <Hook name=\"component:superuser-access-category\" />}\n            </Form>\n          ) : (\n            <Button\n              priority=\"primary\"\n              href={`/auth/login/?next=${encodeURIComponent(location.pathname)}`}\n            >\n              {t('Continue')}\n            </Button>\n          )}\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <StyledTextBlock>\n          {isSuperuser\n            ? t(\n                'You are attempting to access a resource that requires superuser access, please re-authenticate as a superuser.'\n              )\n            : t('Help us keep your account safe by confirming your identity.')}\n        </StyledTextBlock>\n\n        {error && (\n          <StyledAlert type=\"error\" showIcon>\n            {t(errorType)}\n          </StyledAlert>\n        )}\n\n        <Form\n          apiMethod=\"PUT\"\n          apiEndpoint=\"/auth/\"\n          submitLabel={t('Confirm Password')}\n          onSubmitSuccess={this.handleSuccess}\n          onSubmitError={this.handleError}\n          hideFooter={!user.hasPasswordAuth && authenticators.length === 0}\n          initialData={{isSuperuserModal: isSuperuser}}\n          resetOnError\n        >\n          {user.hasPasswordAuth && (\n            <StyledInputField\n              type=\"password\"\n              inline={false}\n              label={t('Password')}\n              name=\"password\"\n              autoFocus\n              flexibleControlStateSize\n            />\n          )}\n\n          <U2fContainer\n            authenticators={authenticators}\n            displayMode=\"sudo\"\n            onTap={this.handleU2fTap}\n          />\n        </Form>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {Header, Body} = this.props;\n\n    return (\n      <Fragment>\n        <Header closeButton>{t('Confirm Password to Continue')}</Header>\n        <Body>{this.renderBodyContent()}</Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(withApi(SudoModal));\nexport {SudoModal};\n\nconst StyledTextBlock = styled(TextBlock)`\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledInputField = styled(InputField)`\n  padding-left: 0;\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n\nconst BackWrapper = styled('div')`\n  width: 100%;\n  margin-left: ${space(4)};\n`;\n","// Copyright (c) 2019 GitHub, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"),\n// to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n// DEALINGS IN THE SOFTWARE.\n\n// below is from https://github.com/github/webauthn-json/tree/66322fc5c12184c5269691ab5abaac79545a3916\n\nexport function base64urlToBuffer(baseurl64String: string): ArrayBuffer {\n  // Base64url to Base64\n  const padding = '=='.slice(0, (4 - (baseurl64String.length % 4)) % 4);\n  const base64String = baseurl64String.replace(/-/g, '+').replace(/_/g, '/') + padding;\n\n  // Base64 to binary string\n  const str = atob(base64String);\n\n  // Binary string to buffer\n  const buffer = new ArrayBuffer(str.length);\n  const byteView = new Uint8Array(buffer);\n  for (let i = 0; i < str.length; i++) {\n    byteView[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function bufferToBase64url(buffer: ArrayBuffer): string {\n  // Buffer to binary string\n  const byteView = new Uint8Array(buffer);\n  let str = '';\n  for (const charCode of byteView) {\n    str += String.fromCharCode(charCode);\n  }\n\n  // Binary string to base64\n  const base64String = btoa(str);\n\n  // Base64 to base64url\n  // We assume that the base64url string is well-formed.\n  const base64urlString = base64String\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n  return base64urlString;\n}\n","import {Component} from 'react';\nimport * as Sentry from '@sentry/react';\nimport * as cbor from 'cbor-web';\n\nimport {base64urlToBuffer, bufferToBase64url} from 'sentry/components/u2f/webAuthnHelper';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {ChallengeData, Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype TapParams = {\n  challenge: string;\n  response: string;\n  isSuperuserModal?: boolean;\n  superuserAccessCategory?: string;\n  superuserReason?: string;\n};\n\ntype Props = {\n  challengeData: ChallengeData;\n  flowMode: string;\n  onTap: ({\n    response,\n    challenge,\n    isSuperuserModal,\n    superuserAccessCategory,\n    superuserReason,\n  }: TapParams) => Promise<void>;\n  organization: Organization;\n  silentIfUnsupported: boolean;\n  style?: React.CSSProperties;\n};\n\ntype State = {\n  challengeElement: HTMLInputElement | null;\n  deviceFailure: string | null;\n  failCount: number;\n  formElement: HTMLFormElement | null;\n  hasBeenTapped: boolean;\n  isSafari: boolean;\n  isSupported: boolean | null;\n  responseElement: HTMLInputElement | null;\n};\n\nclass U2fInterface extends Component<Props, State> {\n  state: State = {\n    isSupported: null,\n    formElement: null,\n    challengeElement: null,\n    hasBeenTapped: false,\n    deviceFailure: null,\n    responseElement: null,\n    isSafari: false,\n    failCount: 0,\n  };\n\n  componentDidMount() {\n    const supported = !!window.PublicKeyCredential;\n\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({isSupported: supported});\n\n    const isSafari =\n      navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');\n\n    if (isSafari) {\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({\n        deviceFailure: 'safari: requires interaction',\n        isSafari,\n        hasBeenTapped: false,\n      });\n    }\n\n    if (supported && !isSafari) {\n      this.invokeU2fFlow();\n    }\n  }\n\n  getU2FResponse(data) {\n    if (!data.response) {\n      return JSON.stringify(data);\n    }\n\n    if (this.props.flowMode === 'sign') {\n      const authenticatorData = {\n        keyHandle: data.id,\n        clientData: bufferToBase64url(data.response.clientDataJSON),\n        signatureData: bufferToBase64url(data.response.signature),\n        authenticatorData: bufferToBase64url(data.response.authenticatorData),\n      };\n      return JSON.stringify(authenticatorData);\n    }\n    if (this.props.flowMode === 'enroll') {\n      const authenticatorData = {\n        id: data.id,\n        rawId: bufferToBase64url(data.rawId),\n        response: {\n          attestationObject: bufferToBase64url(data.response.attestationObject),\n          clientDataJSON: bufferToBase64url(data.response.clientDataJSON),\n        },\n        type: bufferToBase64url(data.type),\n      };\n      return JSON.stringify(authenticatorData);\n    }\n\n    throw new Error(`Unsupported flow mode '${this.props.flowMode}'`);\n  }\n\n  submitU2fResponse(promise) {\n    promise\n      .then(data => {\n        this.setState(\n          {\n            hasBeenTapped: true,\n          },\n          () => {\n            const u2fResponse = this.getU2FResponse(data);\n            const challenge = JSON.stringify(this.props.challengeData);\n\n            if (this.state.responseElement) {\n              // eslint-disable-next-line react/no-direct-mutation-state\n              this.state.responseElement.value = u2fResponse;\n            }\n\n            if (!this.props.onTap) {\n              this.state.formElement?.submit();\n              return;\n            }\n\n            this.props\n              .onTap({\n                response: u2fResponse,\n                challenge,\n              })\n              .catch(() => {\n                // This is kind of gross but I want to limit the amount of changes to this component\n                this.setState({\n                  deviceFailure: 'UNKNOWN_ERROR',\n                  hasBeenTapped: false,\n                });\n              });\n          }\n        );\n      })\n      .catch(err => {\n        let failure = 'DEVICE_ERROR';\n        // in some rare cases there is no metadata on the error which\n        // causes this to blow up badly.\n        if (err.metaData) {\n          if (err.metaData.type === 'DEVICE_INELIGIBLE') {\n            if (this.props.flowMode === 'enroll') {\n              failure = 'DUPLICATE_DEVICE';\n            } else {\n              failure = 'UNKNOWN_DEVICE';\n            }\n          } else if (err.metaData.type === 'BAD_REQUEST') {\n            failure = 'BAD_APPID';\n          }\n        }\n        // we want to know what is happening here.  There are some indicators\n        // that users are getting errors that should not happen through the\n        // regular u2f flow.\n        Sentry.captureException(err);\n        this.setState({\n          deviceFailure: failure,\n          hasBeenTapped: false,\n          failCount: this.state.failCount + 1,\n        });\n      });\n  }\n\n  webAuthnSignIn(publicKeyCredentialRequestOptions) {\n    const promise = navigator.credentials.get({\n      publicKey: publicKeyCredentialRequestOptions,\n    });\n    this.submitU2fResponse(promise);\n  }\n\n  webAuthnRegister(publicKey) {\n    const promise = navigator.credentials.create({\n      publicKey,\n    });\n    this.submitU2fResponse(promise);\n  }\n\n  invokeU2fFlow() {\n    if (this.props.flowMode === 'sign') {\n      const challengeArray = base64urlToBuffer(\n        this.props.challengeData.webAuthnAuthenticationData\n      );\n      const challenge = cbor.decodeFirst(challengeArray);\n      challenge\n        .then(data => {\n          this.webAuthnSignIn(data);\n        })\n        .catch(err => {\n          const failure = 'DEVICE_ERROR';\n          Sentry.captureException(err);\n          this.setState({\n            deviceFailure: failure,\n            hasBeenTapped: false,\n          });\n        });\n    } else if (this.props.flowMode === 'enroll') {\n      const challengeArray = base64urlToBuffer(\n        this.props.challengeData.webAuthnRegisterData\n      );\n      const challenge = cbor.decodeFirst(challengeArray);\n      // challenge contains a PublicKeyCredentialRequestOptions object for webauthn registration\n      challenge\n        .then(data => {\n          this.webAuthnRegister(data.publicKey);\n        })\n        .catch(err => {\n          const failure = 'DEVICE_ERROR';\n          Sentry.captureException(err);\n          this.setState({\n            deviceFailure: failure,\n            hasBeenTapped: false,\n          });\n        });\n    } else {\n      throw new Error(`Unsupported flow mode '${this.props.flowMode}'`);\n    }\n  }\n\n  onTryAgain = () => {\n    this.setState(\n      {hasBeenTapped: false, deviceFailure: null},\n      () => void this.invokeU2fFlow()\n    );\n  };\n\n  bindChallengeElement: React.RefCallback<HTMLInputElement> = ref => {\n    this.setState({\n      challengeElement: ref,\n      formElement: ref && ref.form,\n    });\n\n    if (ref) {\n      ref.value = JSON.stringify(this.props.challengeData);\n    }\n  };\n\n  bindResponseElement: React.RefCallback<HTMLInputElement> = ref =>\n    this.setState({responseElement: ref});\n\n  renderUnsupported() {\n    return this.props.silentIfUnsupported ? null : (\n      <div className=\"u2f-box\">\n        <div className=\"inner\">\n          <p className=\"error\">\n            {t(\n              `\n             Unfortunately your browser does not support U2F. You need to use\n             a different two-factor method or switch to a browser that supports\n             it (Google Chrome or Microsoft Edge).`\n            )}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  get canTryAgain() {\n    return this.state.deviceFailure !== 'BAD_APPID';\n  }\n\n  renderSafariWebAuthn = () => {\n    return (\n      <a onClick={this.onTryAgain} className=\"btn btn-primary\">\n        {this.props.flowMode === 'enroll'\n          ? t('Enroll with WebAuthn')\n          : t('Sign in with WebAuthn')}\n      </a>\n    );\n  };\n\n  renderFailure = () => {\n    const {deviceFailure} = this.state;\n    const supportMail = ConfigStore.get('supportEmail');\n    const support = supportMail ? (\n      <a href={'mailto:' + supportMail}>{supportMail}</a>\n    ) : (\n      <span>{t('Support')}</span>\n    );\n    if (this.state.isSafari && this.state.failCount === 0) {\n      return this.renderSafariWebAuthn();\n    }\n    return (\n      <div className=\"failure-message\">\n        <div>\n          <strong>{t('Error: ')}</strong>{' '}\n          {\n            {\n              UNKNOWN_ERROR: t('There was an unknown problem, please try again'),\n              DEVICE_ERROR: t('Your U2F device reported an error.'),\n              DUPLICATE_DEVICE: t('This device is already registered with Sentry.'),\n              UNKNOWN_DEVICE: t('The device you used for sign-in is unknown.'),\n              BAD_APPID: tct(\n                '[p1:The Sentry server administrator modified the ' +\n                  'device registrations.]' +\n                  '[p2:You need to remove and re-add the device to continue ' +\n                  'using your U2F device. Use a different sign-in method or ' +\n                  'contact [support] for assistance.]',\n                {\n                  p1: <p />,\n                  p2: <p />,\n                  support,\n                }\n              ),\n            }[deviceFailure || '']\n          }\n        </div>\n        {this.canTryAgain && (\n          <div style={{marginTop: 18}}>\n            <a onClick={this.onTryAgain} className=\"btn btn-primary\">\n              {t('Try Again')}\n            </a>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  renderBody() {\n    return this.state.deviceFailure ? this.renderFailure() : this.props.children;\n  }\n\n  renderPrompt() {\n    const {style} = this.props;\n\n    return (\n      <div\n        style={style}\n        className={\n          'u2f-box' +\n          (this.state.hasBeenTapped ? ' tapped' : '') +\n          (this.state.deviceFailure\n            ? this.state.failCount === 0 && this.state.isSafari\n              ? ' loading-dots'\n              : ' device-failure'\n            : '')\n        }\n      >\n        <div className=\"device-animation-frame\">\n          <div className=\"device-failed\" />\n          <div className=\"device-animation\" />\n          <div className=\"loading-dots\">\n            <span className=\"dot\" />\n            <span className=\"dot\" />\n            <span className=\"dot\" />\n          </div>\n        </div>\n        <input type=\"hidden\" name=\"challenge\" ref={this.bindChallengeElement} />\n        <input type=\"hidden\" name=\"response\" ref={this.bindResponseElement} />\n        <div className=\"inner\">{this.renderBody()}</div>\n      </div>\n    );\n  }\n\n  render() {\n    const {isSupported} = this.state;\n    // if we are still waiting for the browser to tell us if we can do u2f this\n    // will be null.\n    if (isSupported === null) {\n      return null;\n    }\n\n    if (!isSupported) {\n      return this.renderUnsupported();\n    }\n\n    return this.renderPrompt();\n  }\n}\n\nexport default withOrganization(U2fInterface);\n","import {t} from 'sentry/locale';\n\nimport U2fInterface from './u2finterface';\n\nconst MESSAGES = {\n  signin: t(\n    'Insert your U2F device or tap the button on it to confirm the sign-in request.'\n  ),\n  sudo: t('Alternatively you can use your U2F device to confirm the action.'),\n  enroll: t(\n    'To enroll your U2F device insert it now or tap the button on it to activate it.'\n  ),\n};\n\ntype InterfaceProps = React.ComponentProps<typeof U2fInterface>;\n\ntype Props = Omit<InterfaceProps, 'silentIfUnsupported' | 'flowMode'> & {\n  displayMode?: 'signin' | 'enroll' | 'sudo';\n};\n\nfunction U2fSign({displayMode = 'signin', ...props}: Props) {\n  const flowMode = displayMode === 'enroll' ? 'enroll' : 'sign';\n\n  return (\n    <U2fInterface\n      {...props}\n      silentIfUnsupported={displayMode === 'sudo'}\n      flowMode={flowMode}\n    >\n      <p>{MESSAGES[displayMode] ?? null}</p>\n    </U2fInterface>\n  );\n}\n\nexport default U2fSign;\n","export enum ErrorCodes {\n  invalidPassword = 'Incorrect password',\n  invalidSSOSession = 'Your SSO Session has expired, please reauthenticate',\n  invalidAccessCategory = 'Please fill out the access category and reason correctly',\n  unknownError = 'An error ocurred, please try again',\n}\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  // Clear API calls on unmount (if persistInFlight is disabled\n  const clearOnUnmount = useCallback(() => {\n    if (!persistInFlight) {\n      api.clear();\n    }\n  }, [api, persistInFlight]);\n\n  useEffect(() => clearOnUnmount, [clearOnUnmount]);\n\n  return api;\n}\n\nexport default useApi;\n","import {Client} from 'sentry/api';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useApi from 'sentry/utils/useApi';\n\ntype InjectedApiProps = {\n  api: Client;\n};\n\ntype WrappedProps<P> = Omit<P, keyof InjectedApiProps> & Partial<InjectedApiProps>;\n\n/**\n * XXX: Prefer useApi if you are wrapping a Function Component!\n *\n * React Higher-Order Component (HoC) that provides \"api\" client when mounted,\n * and clears API requests when component is unmounted.\n *\n * If an `api` prop is provided when the component is invoked it will be passed\n * through.\n */\nconst withApi = <P extends InjectedApiProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Parameters<typeof useApi>[0] = {}\n) => {\n  const WithApi: React.FC<WrappedProps<P>> = ({api: propsApi, ...props}) => {\n    const api = useApi({api: propsApi, ...options});\n\n    return <WrappedComponent {...(props as P)} api={api} />;\n  };\n\n  WithApi.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n\n  return WithApi;\n};\n\nexport default withApi;\n"],"names":["async","disconnectIdentity","identity","onSuccess","api","Client","requestPromise","category","id","method","addErrorMessage","addSuccessMessage","provider","name","updateUser","user","ConfigStore","options","theme","logout","removeAuthenticator","userId","authId","Hook","props","HookComponent","Component","hooks","HookStore","map","cb","hookName","this","handleHooks","undefined","componentWillUnmount","unsubscribe","setState","render","children","state","length","U2fContainer","className","authenticators","auth","challenge","challengeData","SudoModal","error","errorType","busy","superuserAccessCategory","superuserReason","isSuperuser","data","isSuperuserModal","handleSuccess","err","handleError","closeModal","location","needsReload","router","retryRequest","replace","pathname","forceUpdate","Date","window","reload","then","status","ErrorCodes","assign","encodeURIComponent","componentDidMount","getAuthenticators","renderBodyContent","isSelfHosted","validateSUForm","handleLogout","hasPasswordAuth","Fragment","StyledTextBlock","t","StyledAlert","type","showIcon","apiMethod","apiEndpoint","submitLabel","onSubmitSuccess","onSubmitError","initialData","extraButton","BackWrapper","onClick","handleSubmit","resetOnError","priority","href","hideFooter","StyledInputField","inline","label","autoFocus","flexibleControlStateSize","displayMode","onTap","handleU2fTap","Header","Body","closeButton","withRouter","withApi","TextBlock","space","InputField","Alert","base64urlToBuffer","baseurl64String","padding","slice","base64String","str","atob","buffer","ArrayBuffer","byteView","Uint8Array","i","charCodeAt","bufferToBase64url","charCode","String","fromCharCode","btoa","U2fInterface","isSupported","formElement","challengeElement","hasBeenTapped","deviceFailure","responseElement","isSafari","failCount","invokeU2fFlow","ref","form","value","JSON","stringify","onTryAgain","flowMode","supportMail","support","renderSafariWebAuthn","UNKNOWN_ERROR","DEVICE_ERROR","DUPLICATE_DEVICE","UNKNOWN_DEVICE","BAD_APPID","tct","p1","p2","canTryAgain","style","marginTop","supported","PublicKeyCredential","navigator","userAgent","includes","getU2FResponse","response","authenticatorData","keyHandle","clientData","clientDataJSON","signatureData","signature","rawId","attestationObject","Error","submitU2fResponse","promise","u2fResponse","catch","submit","failure","metaData","Sentry","webAuthnSignIn","publicKeyCredentialRequestOptions","credentials","get","publicKey","webAuthnRegister","create","challengeArray","webAuthnAuthenticationData","cbor","decodeFirst","webAuthnRegisterData","renderUnsupported","silentIfUnsupported","renderBody","renderFailure","renderPrompt","bindChallengeElement","bindResponseElement","withOrganization","MESSAGES","signin","sudo","enroll","U2fSign","persistInFlight","providedApi","localApi","useRef","current","clearOnUnmount","useCallback","clear","useEffect","WrappedComponent","WithApi","propsApi","useApi","displayName","getDisplayName"],"sourceRoot":""}