{"version":3,"file":"chunks/app_views_settings_organizationTeams_teamDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/organizationTeams/teamDetails.tsx"],"sourcesContent":["import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {cloneElement, isValidElement, useState} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {joinTeam} from 'sentry/actionCreators/teams';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport IdBadge from 'sentry/components/idBadge';\nimport ListLink from 'sentry/components/links/listLink';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NavTabs from 'sentry/components/navTabs';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t, tct} from 'sentry/locale';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {Team} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport useApi from 'sentry/utils/useApi';\nimport useTeams from 'sentry/utils/useTeams';\n\ntype Props = {\n  children: React.ReactNode;\n} & RouteComponentProps<{orgId: string; teamId: string}, {}>;\n\nfunction TeamDetails({children, ...props}: Props) {\n  const api = useApi();\n  const [currentTeam, setCurrentTeam] = useState(\n    TeamStore.getBySlug(props.params.teamId)\n  );\n  const [requesting, setRequesting] = useState(false);\n\n  function handleRequestAccess(team: Team) {\n    if (!team) {\n      return;\n    }\n\n    setRequesting(true);\n\n    joinTeam(\n      api,\n      {\n        orgId: props.params.orgId,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          addSuccessMessage(\n            tct('You have requested access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          setRequesting(false);\n        },\n        error: () => {\n          addErrorMessage(\n            tct('Unable to request access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          setRequesting(false);\n        },\n      }\n    );\n  }\n\n  function onTeamChange(data: Team) {\n    if (currentTeam !== data) {\n      const orgId = props.params.orgId;\n      browserHistory.replace(`/organizations/${orgId}/teams/${data.slug}/settings/`);\n    } else {\n      setCurrentTeam({...currentTeam, ...data});\n    }\n  }\n\n  // `/organizations/${orgId}/teams/${teamId}`;\n  const routePrefix = recreateRoute('', {\n    routes: props.routes,\n    params: props.params,\n    stepBack: -1,\n  });\n\n  const navigationTabs = [\n    <ListLink key={0} to={`${routePrefix}members/`}>\n      {t('Members')}\n    </ListLink>,\n    <ListLink key={1} to={`${routePrefix}projects/`}>\n      {t('Projects')}\n    </ListLink>,\n    <ListLink key={2} to={`${routePrefix}notifications/`}>\n      {t('Notifications')}\n    </ListLink>,\n    <ListLink key={3} to={`${routePrefix}settings/`}>\n      {t('Settings')}\n    </ListLink>,\n  ];\n\n  const {teams, initiallyLoaded} = useTeams({slugs: [props.params.teamId]});\n\n  return (\n    <div>\n      {initiallyLoaded ? (\n        teams.length ? (\n          teams.map((team, i) => {\n            if (!team || !team.hasAccess) {\n              return (\n                <Alert type=\"warning\">\n                  {team ? (\n                    <RequestAccessWrapper>\n                      {tct('You do not have access to the [teamSlug] team.', {\n                        teamSlug: <strong>{`#${team.slug}`}</strong>,\n                      })}\n                      <Button\n                        disabled={requesting || team.isPending}\n                        size=\"sm\"\n                        onClick={() => handleRequestAccess(team)}\n                      >\n                        {team.isPending ? t('Request Pending') : t('Request Access')}\n                      </Button>\n                    </RequestAccessWrapper>\n                  ) : (\n                    <div>{t('You do not have access to this team.')}</div>\n                  )}\n                </Alert>\n              );\n            }\n            return (\n              <div key={i}>\n                <SentryDocumentTitle\n                  title={t('Team Details')}\n                  orgSlug={props.params.orgId}\n                />\n                <h3>\n                  <IdBadge hideAvatar team={team} avatarSize={36} />\n                </h3>\n\n                <NavTabs underlined>{navigationTabs}</NavTabs>\n\n                {isValidElement(children) &&\n                  cloneElement(children, {\n                    team,\n                    onTeamChange: () => onTeamChange(team),\n                  })}\n              </div>\n            );\n          })\n        ) : (\n          <Alert type=\"warning\">\n            <div>{t('You do not have access to this team.')}</div>\n          </Alert>\n        )\n      ) : (\n        <LoadingIndicator />\n      )}\n    </div>\n  );\n}\n\nexport default TeamDetails;\n\nconst RequestAccessWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n"],"names":["ListLink","Component","_classNames","className","activeClassName","this","props","isActive","classNames","to","query","index","router","queryData","qs","undefined","target","pathname","render","children","disabled","carriedProps","omit","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","p","theme","recreateRoute","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","TeamDetails","api","useApi","currentTeam","setCurrentTeam","useState","TeamStore","teamId","requesting","setRequesting","routePrefix","navigationTabs","t","teams","initiallyLoaded","useTeams","slugs","length","team","i","hasAccess","title","orgSlug","orgId","hideAvatar","avatarSize","underlined","isValidElement","cloneElement","onTeamChange","data","browserHistory","slug","type","RequestAccessWrapper","tct","teamSlug","isPending","size","onClick","joinTeam","success","addSuccessMessage","error","addErrorMessage","handleRequestAccess"],"sourceRoot":""}