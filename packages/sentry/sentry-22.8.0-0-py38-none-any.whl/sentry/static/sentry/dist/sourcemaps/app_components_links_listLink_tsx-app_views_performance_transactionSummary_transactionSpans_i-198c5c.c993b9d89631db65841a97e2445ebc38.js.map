{"version":3,"file":"chunks/app_components_links_listLink_tsx-app_views_performance_transactionSummary_transactionSpans_i-198c5c.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/performance/suspectSpans/suspectSpansQuery.tsx","webpack:///./app/utils/performance/suspectSpans/spanOpsQuery.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/opsFilter.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/suspectSpansTable.tsx","webpack:///../node_modules/lodash/_baseExtremum.js","webpack:///../node_modules/lodash/_baseGt.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {EventsMetaType, MetaType} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport {TransactionThresholdMetric} from 'sentry/views/performance/transactionSummary/transactionThresholdModal';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata from the events endpoint.\n */\nexport type EventsTableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\nexport type TableDataWithTitle = TableData & {title: string};\n\ntype DiscoverQueryPropsWithThresholds = DiscoverQueryProps & {\n  transactionName?: string;\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype DiscoverQueryComponentProps = DiscoverQueryPropsWithThresholds & {\n  children: (props: GenericChildrenProps<TableData>) => React.ReactNode;\n  useEvents?: boolean;\n};\n\nfunction shouldRefetchData(\n  prevProps: DiscoverQueryPropsWithThresholds,\n  nextProps: DiscoverQueryPropsWithThresholds\n) {\n  return (\n    prevProps.transactionName !== nextProps.transactionName ||\n    prevProps.transactionThreshold !== nextProps.transactionThreshold ||\n    prevProps.transactionThresholdMetric !== nextProps.transactionThresholdMetric\n  );\n}\n\nfunction DiscoverQuery(props: DiscoverQueryComponentProps) {\n  const endpoint = props.useEvents ? 'events' : 'eventsv2';\n  const afterFetch = props.useEvents\n    ? (data, _) => {\n        const {fields, ...otherMeta} = data.meta ?? {};\n        return {\n          ...data,\n          meta: {...fields, ...otherMeta},\n        };\n      }\n    : undefined;\n  return (\n    <GenericDiscoverQuery<TableData, DiscoverQueryPropsWithThresholds>\n      route={endpoint}\n      shouldRefetchData={shouldRefetchData}\n      afterFetch={afterFetch}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(DiscoverQuery);\n","import omit from 'lodash/omit';\n\nimport {defined} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SuspectSpans} from './types';\n\ntype SuspectSpansProps = {\n  maxExclusiveTime?: string;\n  minExclusiveTime?: string;\n  perSuspect?: number;\n  spanGroups?: string[];\n  spanOps?: string[];\n};\n\ntype RequestProps = DiscoverQueryProps & SuspectSpansProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<SuspectSpansProps>, 'tableData'> & {\n  suspectSpans: SuspectSpans | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getSuspectSpanPayload(props: RequestProps) {\n  const {perSuspect, spanOps, spanGroups, minExclusiveTime, maxExclusiveTime} = props;\n  const payload = {\n    perSuspect,\n    spanOp: spanOps,\n    spanGroup: spanGroups,\n    min_exclusive_time: minExclusiveTime,\n    max_exclusive_time: maxExclusiveTime,\n  };\n  if (!defined(payload.perSuspect)) {\n    delete payload.perSuspect;\n  }\n  if (!defined(payload.spanOp)) {\n    delete payload.spanOp;\n  }\n  if (!defined(payload.spanGroup)) {\n    delete payload.spanGroup;\n  }\n  const additionalPayload = props.eventView.getEventsAPIPayload(props.location);\n  return {\n    ...payload,\n    ...additionalPayload,\n  };\n}\n\nfunction SuspectSpansQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SuspectSpans, SuspectSpansProps>\n      route=\"events-spans-performance\"\n      getRequestPayload={getSuspectSpanPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({suspectSpans: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SuspectSpansQuery);\n","import omit from 'lodash/omit';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SpanOps} from './types';\n\ntype SpanOpsProps = {};\n\ntype RequestProps = DiscoverQueryProps & SpanOpsProps;\n\ntype ChildrenProps = Omit<GenericChildrenProps<SpanOpsProps>, 'tableData'> & {\n  spanOps: SpanOps | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction SpanOpsQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SpanOps, SpanOpsProps>\n      route=\"events-span-ops\"\n      limit={20}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({spanOps: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SpanOpsQuery);\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {pickBarColor} from 'sentry/components/performance/waterfall/utils';\nimport {IconFilter, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SpanOpsQuery from 'sentry/utils/performance/suspectSpans/spanOpsQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\ntype Props = {\n  eventView: EventView;\n  handleOpChange: (op: string | undefined) => void;\n  location: Location;\n  organization: Organization;\n  transactionName: string;\n};\n\nfunction getMenuOptions({spanOps, isLoading, error}) {\n  if (isLoading) {\n    return [{key: 'isLoading', isDisabled: true, label: t('Loading…')}];\n  }\n\n  if (error) {\n    return [\n      {\n        key: 'error',\n        isDisabled: true,\n        label: t('Error loading operations'),\n        leadingItems: <IconWarning color=\"subText\" />,\n      },\n    ];\n  }\n\n  return spanOps.map(spanOp => ({\n    value: spanOp.op,\n    label: spanOp.op,\n    leadingItems: <OperationDot backgroundColor={pickBarColor(spanOp.op)} />,\n  }));\n}\n\nexport default function OpsFilter(props: Props) {\n  const {location, eventView, organization, handleOpChange, transactionName} = props;\n\n  // clear out the query string from the event view\n  // as we want to restrict queries to the op names\n  const conditions = new MutableSearch('');\n  conditions\n    .setFilterValues('event.type', ['transaction'])\n    .setFilterValues('transaction', [transactionName]);\n  const opsFilterEventView = eventView.clone();\n  opsFilterEventView.query = conditions.formatString();\n\n  const currentOp = decodeScalar(location.query.spanOp);\n\n  return (\n    <SpanOpsQuery\n      location={location}\n      orgSlug={organization.slug}\n      eventView={opsFilterEventView}\n      cursor=\"0:0:1\"\n      noPagination\n    >\n      {results => (\n        <CompactSelect\n          isClearable\n          maxMenuWidth=\"24rem\"\n          menuTitle={t('Filter by operation')}\n          options={getMenuOptions(results)}\n          onChange={opt => handleOpChange(opt?.value)}\n          value={currentOp}\n          triggerLabel={currentOp ?? t('Filter')}\n          triggerProps={{icon: <IconFilter />}}\n        />\n      )}\n    </SpanOpsQuery>\n  );\n}\n\nconst OperationDot = styled('div')<{backgroundColor: string}>`\n  display: block;\n  width: ${space(1)};\n  height: ${space(1)};\n  border-radius: 100%;\n  background-color: ${p => p.backgroundColor};\n`;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport Pagination from 'sentry/components/pagination';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SuspectSpansQuery from 'sentry/utils/performance/suspectSpans/suspectSpansQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {SetStateAction} from '../types';\n\nimport OpsFilter from './opsFilter';\nimport SuspectSpansTable from './suspectSpansTable';\nimport {SpanSort, SpansTotalValues} from './types';\nimport {\n  getSuspectSpanSortFromEventView,\n  getTotalsView,\n  SPAN_RELATIVE_PERIODS,\n  SPAN_RETENTION_DAYS,\n  SPAN_SORT_OPTIONS,\n  SPAN_SORT_TO_FIELDS,\n} from './utils';\n\nconst ANALYTICS_VALUES = {\n  spanOp: (organization: Organization, value: string | undefined) =>\n    trackAdvancedAnalyticsEvent('performance_views.spans.change_op', {\n      organization,\n      operation_name: value,\n    }),\n  sort: (organization: Organization, value: string | undefined) =>\n    trackAdvancedAnalyticsEvent('performance_views.spans.change_sort', {\n      organization,\n      sort_column: value,\n    }),\n};\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  setError: SetStateAction<string | undefined>;\n  transactionName: string;\n};\n\nfunction SpansContent(props: Props) {\n  const {location, organization, eventView, projectId, transactionName} = props;\n  const query = decodeScalar(location.query.query, '');\n\n  function handleChange(key: string) {\n    return function (value: string | undefined) {\n      ANALYTICS_VALUES[key]?.(organization, value);\n\n      const queryParams = normalizeDateTimeParams({\n        ...(location.query || {}),\n        [key]: value,\n      });\n\n      // do not propagate pagination when making a new search\n      const toOmit = ['cursor'];\n      if (!defined(value)) {\n        toOmit.push(key);\n      }\n      const searchQueryParams = omit(queryParams, toOmit);\n\n      browserHistory.push({\n        ...location,\n        query: searchQueryParams,\n      });\n    };\n  }\n\n  const spanOp = decodeScalar(location.query.spanOp);\n  const spanGroup = decodeScalar(location.query.spanGroup);\n  const sort = getSuspectSpanSortFromEventView(eventView);\n  const spansView = getSpansEventView(eventView, sort.field);\n  const totalsView = getTotalsView(eventView);\n\n  const {projects} = useProjects();\n\n  return (\n    <Layout.Main fullWidth>\n      <FilterActions>\n        <OpsFilter\n          location={location}\n          eventView={eventView}\n          organization={organization}\n          handleOpChange={handleChange('spanOp')}\n          transactionName={transactionName}\n        />\n        <PageFilterBar condensed>\n          <EnvironmentPageFilter />\n          <DatePageFilter\n            alignDropdown=\"left\"\n            maxPickableDays={SPAN_RETENTION_DAYS}\n            relativeOptions={SPAN_RELATIVE_PERIODS}\n          />\n        </PageFilterBar>\n        <StyledSearchBar\n          organization={organization}\n          projectIds={eventView.project}\n          query={query}\n          fields={eventView.fields}\n          onSearch={handleChange('query')}\n        />\n        <CompactSelect\n          value={sort.field}\n          options={SPAN_SORT_OPTIONS.map(opt => ({value: opt.field, label: opt.label}))}\n          onChange={opt => handleChange('sort')(opt.value)}\n          triggerProps={{prefix: sort.prefix}}\n          triggerLabel={sort.label}\n        />\n      </FilterActions>\n      <DiscoverQuery\n        eventView={totalsView}\n        orgSlug={organization.slug}\n        location={location}\n        referrer=\"api.performance.transaction-spans\"\n        cursor=\"0:0:1\"\n        noPagination\n        useEvents\n      >\n        {({tableData}) => {\n          const totals: SpansTotalValues | null =\n            (tableData?.data?.[0] as SpansTotalValues | undefined) ?? null;\n          return (\n            <SuspectSpansQuery\n              location={location}\n              orgSlug={organization.slug}\n              eventView={spansView}\n              limit={10}\n              perSuspect={0}\n              spanOps={defined(spanOp) ? [spanOp] : []}\n              spanGroups={defined(spanGroup) ? [spanGroup] : []}\n            >\n              {({suspectSpans, isLoading, pageLinks}) => (\n                <Fragment>\n                  <SuspectSpansTable\n                    location={location}\n                    organization={organization}\n                    transactionName={transactionName}\n                    project={projects.find(p => p.id === projectId)}\n                    isLoading={isLoading}\n                    suspectSpans={suspectSpans ?? []}\n                    totals={totals}\n                    sort={sort.field}\n                  />\n                  <Pagination pageLinks={pageLinks ?? null} />\n                </Fragment>\n              )}\n            </SuspectSpansQuery>\n          );\n        }}\n      </DiscoverQuery>\n    </Layout.Main>\n  );\n}\n\nfunction getSpansEventView(eventView: EventView, sort: SpanSort): EventView {\n  eventView = eventView.clone();\n  const fields = SPAN_SORT_TO_FIELDS[sort];\n  eventView.fields = fields ? fields.map(field => ({field})) : [];\n  return eventView;\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(3, min-content);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: auto auto 1fr auto;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/5;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nexport default SpansContent;\n","import {Location} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport PageLayout from '../pageLayout';\nimport Tab from '../tabs';\n\nimport SpansContent from './content';\nimport {generateSpansEventView} from './utils';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction TransactionSpans(props: Props) {\n  const {location, organization, projects} = props;\n\n  return (\n    <PageLayout\n      location={location}\n      organization={organization}\n      projects={projects}\n      tab={Tab.Spans}\n      getDocumentTitle={getDocumentTitle}\n      generateEventView={generateSpansEventView}\n      childComponent={SpansContent}\n    />\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Performance')].join(' - ');\n  }\n\n  return [t('Summary'), t('Performance')].join(' - ');\n}\n\nexport default withProjects(withOrganization(TransactionSpans));\n","import {Query} from 'history';\n\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\n\nexport function generateSpanDetailsRoute({\n  orgSlug,\n  spanSlug,\n}: {\n  orgSlug: String;\n  spanSlug: SpanSlug;\n}): string {\n  const spanComponent = `${encodeURIComponent(spanSlug.op)}:${spanSlug.group}`;\n  return `/organizations/${orgSlug}/performance/summary/spans/${spanComponent}/`;\n}\n\nexport function spanDetailsRouteWithQuery({\n  orgSlug,\n  transaction,\n  query,\n  spanSlug,\n  projectID,\n}: {\n  orgSlug: string;\n  query: Query;\n  spanSlug: SpanSlug;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateSpanDetailsRoute({\n    orgSlug,\n    spanSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport enum ZoomKeys {\n  MIN = 'min',\n  MAX = 'max',\n}\n","import {ReactNode} from 'react';\nimport {Location} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {Container as TableCellContainer} from 'sentry/utils/discover/styles';\nimport {SuspectSpans} from 'sentry/utils/performance/suspectSpans/types';\n\nimport {spanDetailsRouteWithQuery} from './spanDetails/utils';\nimport {SpanSort, SpanSortOthers, SpanSortPercentiles, SpansTotalValues} from './types';\n\ntype Props = {\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  sort: SpanSort;\n  suspectSpans: SuspectSpans;\n  totals: SpansTotalValues | null;\n  transactionName: string;\n  project?: Project;\n};\n\nexport default function SuspectSpansTable(props: Props) {\n  const {\n    location,\n    organization,\n    transactionName,\n    isLoading,\n    suspectSpans,\n    totals,\n    sort,\n    project,\n  } = props;\n\n  const data: TableDataRowWithExtras[] = suspectSpans.map(suspectSpan => ({\n    operation: suspectSpan.op,\n    group: suspectSpan.group,\n    description: suspectSpan.description,\n    totalCount: suspectSpan.count,\n    frequency:\n      // Frequency is computed using the `uniq` function in ClickHouse.\n      // Because it is an approximation, it can occasionally exceed the number of events.\n      defined(suspectSpan.frequency) && defined(totals?.['count()'])\n        ? Math.min(1, suspectSpan.frequency / totals!['count()'])\n        : null,\n    avgOccurrences: suspectSpan.avgOccurrences,\n    p50ExclusiveTime: suspectSpan.p50ExclusiveTime,\n    p75ExclusiveTime: suspectSpan.p75ExclusiveTime,\n    p95ExclusiveTime: suspectSpan.p95ExclusiveTime,\n    p99ExclusiveTime: suspectSpan.p99ExclusiveTime,\n    sumExclusiveTime: suspectSpan.sumExclusiveTime,\n  }));\n\n  return (\n    <GridEditable\n      isLoading={isLoading}\n      data={data}\n      columnOrder={COLUMN_ORDER[sort].map(column => COLUMNS[column])}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell,\n        renderBodyCell: renderBodyCellWithMeta(\n          location,\n          organization,\n          transactionName,\n          project\n        ),\n      }}\n      location={location}\n    />\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(\n  location: Location,\n  organization: Organization,\n  transactionName: string,\n  project?: Project\n) {\n  return (column: TableColumn, dataRow: TableDataRowWithExtras): React.ReactNode => {\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n\n    if (column.key === 'description') {\n      const target = spanDetailsRouteWithQuery({\n        orgSlug: organization.slug,\n        transaction: transactionName,\n        query: location.query,\n        spanSlug: {op: dataRow.operation, group: dataRow.group},\n        projectID: project?.id,\n      });\n      return (\n        <TableCellContainer>\n          <Link to={target}>{dataRow[column.key] ?? t('(unnamed span)')}</Link>\n        </TableCellContainer>\n      );\n    }\n\n    return fieldRenderer(dataRow, {location, organization});\n  };\n}\n\ntype TableColumnKey =\n  | 'operation'\n  | 'description'\n  | 'totalCount'\n  | 'frequency'\n  | 'avgOccurrences'\n  | 'p50ExclusiveTime'\n  | 'p75ExclusiveTime'\n  | 'p95ExclusiveTime'\n  | 'p99ExclusiveTime'\n  | 'sumExclusiveTime';\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableDataRowWithExtras = TableDataRow & {\n  group: string;\n};\n\nconst COLUMN_ORDER: Record<SpanSort, TableColumnKey[]> = {\n  [SpanSortOthers.COUNT]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortOthers.AVG_OCCURRENCE]: [\n    'operation',\n    'description',\n    'avgOccurrences',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortOthers.SUM_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P50_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p50ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P75_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P95_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p95ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P99_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p99ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n};\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  operation: {\n    key: 'operation',\n    name: t('Span Operation'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  description: {\n    key: 'description',\n    name: t('Span Name'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  totalCount: {\n    key: 'totalCount',\n    name: t('Total Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  frequency: {\n    key: 'frequency',\n    name: t('Frequency'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  avgOccurrences: {\n    key: 'avgOccurrences',\n    name: t('Average Occurrences'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p50ExclusiveTime: {\n    key: 'p50ExclusiveTime',\n    name: t('P50 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p75ExclusiveTime: {\n    key: 'p75ExclusiveTime',\n    name: t('P75 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p95ExclusiveTime: {\n    key: 'p95ExclusiveTime',\n    name: t('P95 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p99ExclusiveTime: {\n    key: 'p99ExclusiveTime',\n    name: t('P99 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  sumExclusiveTime: {\n    key: 'sumExclusiveTime',\n    name: t('Total Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nconst COLUMN_TYPE: Record<TableColumnKey, ColumnType> = {\n  operation: 'string',\n  description: 'string',\n  totalCount: 'integer',\n  frequency: 'percentage',\n  avgOccurrences: 'number',\n  p50ExclusiveTime: 'duration',\n  p75ExclusiveTime: 'duration',\n  p95ExclusiveTime: 'duration',\n  p99ExclusiveTime: 'duration',\n  sumExclusiveTime: 'duration',\n};\n","var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n"],"names":["SortLink","align","title","canSort","generateSortLink","onClick","direction","target","StyledNonLink","arrow","StyledIconArrow","size","StyledLink","to","props","forwardProps","omit","p","IconArrow","ListLink","Component","_classNames","className","activeClassName","this","isActive","classNames","query","index","router","queryData","qs","undefined","pathname","render","children","disabled","carriedProps","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","theme","shouldRefetchData","prevProps","nextProps","transactionName","transactionThreshold","transactionThresholdMetric","DiscoverQuery","endpoint","useEvents","afterFetch","data","_","fields","otherMeta","meta","route","withApi","getSuspectSpanPayload","perSuspect","spanOps","spanGroups","minExclusiveTime","maxExclusiveTime","payload","spanOp","spanGroup","min_exclusive_time","max_exclusive_time","defined","additionalPayload","eventView","getEventsAPIPayload","location","SuspectSpansQuery","getRequestPayload","tableData","rest","suspectSpans","SpanOpsQuery","limit","getMenuOptions","isLoading","error","key","isDisabled","label","t","leadingItems","color","map","value","op","OperationDot","backgroundColor","pickBarColor","OpsFilter","organization","handleOpChange","conditions","MutableSearch","setFilterValues","opsFilterEventView","clone","formatString","currentOp","decodeScalar","orgSlug","slug","cursor","noPagination","results","isClearable","maxMenuWidth","menuTitle","options","onChange","opt","triggerLabel","triggerProps","icon","space","ANALYTICS_VALUES","trackAdvancedAnalyticsEvent","operation_name","sort","sort_column","SpansContent","projectId","handleChange","queryParams","normalizeDateTimeParams","toOmit","push","searchQueryParams","browserHistory","getSuspectSpanSortFromEventView","spansView","SPAN_SORT_TO_FIELDS","field","getSpansEventView","totalsView","getTotalsView","projects","useProjects","fullWidth","FilterActions","condensed","alignDropdown","maxPickableDays","SPAN_RETENTION_DAYS","relativeOptions","SPAN_RELATIVE_PERIODS","StyledSearchBar","projectIds","project","onSearch","SPAN_SORT_OPTIONS","prefix","referrer","totals","pageLinks","Fragment","find","id","breakpoints","small","xlarge","SearchBar","TransactionSpans","tab","Tab","getDocumentTitle","generateEventView","generateSpansEventView","childComponent","String","trim","length","join","withProjects","withOrganization","spanDetailsRouteWithQuery","transaction","spanSlug","projectID","encodeURIComponent","group","generateSpanDetailsRoute","environment","statsPeriod","start","end","ZoomKeys","SuspectSpansTable","suspectSpan","operation","description","totalCount","count","frequency","Math","min","avgOccurrences","p50ExclusiveTime","p75ExclusiveTime","p95ExclusiveTime","p99ExclusiveTime","sumExclusiveTime","columnOrder","COLUMN_ORDER","column","COLUMNS","columnSortBy","grid","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","_index","fieldAlignment","COLUMN_TYPE","name","dataRow","fieldRenderer","getFieldRenderer","SpanSortOthers","SpanSortPercentiles","width","COL_WIDTH_UNDEFINED","isSymbol","module","exports","array","iteratee","comparator","current","computed","result","other"],"sourceRoot":""}