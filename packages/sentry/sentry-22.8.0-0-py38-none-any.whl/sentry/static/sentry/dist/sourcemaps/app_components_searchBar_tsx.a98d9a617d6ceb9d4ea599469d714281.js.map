{"version":3,"file":"chunks/app_components_searchBar_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"qwBAwBA,MAAMA,UAAkBC,EAAAA,cAAqC,uDAO5C,CACbC,MAAOC,KAAKC,MAAMF,OAASC,KAAKC,MAAMC,aACtCC,iBAAiB,KATwC,8BAoB1CC,EAAAA,EAAAA,eApB0C,oBAsBpD,KACDJ,KAAKK,eAAeC,SACtBN,KAAKK,eAAeC,QAAQC,WAxB2B,wBA4B/CC,IACVA,EAAIC,iBACJT,KAAKO,OACLP,KAAKC,MAAMS,SAASV,KAAKW,MAAMZ,WA/B0B,2BAkC7C,KACZC,KAAKY,SAAS,CAACb,MAAOC,KAAKC,MAAMC,eAAe,KAC9CF,KAAKC,MAAMS,SAASV,KAAKW,MAAMZ,QAC/Bc,EAAAA,EAAAA,GAAeb,KAAKC,MAAMa,SAAUd,KAAKW,MAAMZ,cArCQ,4BAyC5C,KACbC,KAAKY,SAAS,CACZT,iBAAiB,QA3CsC,2BA+C7C,KACZH,KAAKY,SAAS,CAACT,iBAAiB,QAhDyB,6BAmD1CK,IACf,MAAM,MAACO,GAASP,EAAIQ,OAEpBhB,KAAKY,SAAS,CAACb,MAAOgB,KACtBF,EAAAA,EAAAA,GAAeb,KAAKC,MAAMa,SAAUC,MA3CtCE,iCAAiCC,GAC3BA,EAAUnB,QAAUC,KAAKC,MAAMF,OACjCC,KAAKY,SAAS,CACZb,MAAOmB,EAAUnB,QA2CvBoB,SAEE,MAAM,UACJC,EADI,MAEJC,EACAtB,MAAOuB,EAHH,aAIJpB,EACAY,SAAUS,EACVb,SAAUc,KACPC,GACDzB,KAAKC,MAET,OACE,eAAKmB,UAAWM,GAAAA,CAAW,SAAUN,GAArC,UACE,gBAAMA,UAAU,kBAAkBO,SAAU3B,KAAK2B,SAAjD,UACE,0BACE,QAACC,EAAD,IACMH,EACJI,KAAK,OACLT,UAAU,eACVU,KAAK,QACLC,IAAK/B,KAAKK,eACV2B,aAAa,MACbjB,MAAOf,KAAKW,MAAMZ,MAClBkC,OAAQjC,KAAKkC,YACbpB,SAAUd,KAAKmC,cACfd,MAAOA,KAET,QAACe,EAAD,CAAkBhB,UAAU,oBAAoBiB,KAAK,KAAKC,MAAM,YAC/DtC,KAAKW,MAAMZ,QAAUG,IACpB,QAACqC,EAAD,CACEV,KAAK,SACLT,UAAU,oBACVoB,SAAS,OACTC,QAASzC,KAAK0C,YACdL,KAAK,KACLM,MAAM,QAAC,IAAD,IACN,cAAYC,EAAAA,EAAAA,GAAE,mBA/FxB/C,EAAAA,YAAAA,a,OAAAA,EAAAA,eAC+E,CACjFE,MAAO,GACPG,aAAc,GACdQ,SAAU,eAqGd,MAAMkB,GAAc,OAAOiB,EAAAA,EAAP,qBAAH,UACNC,GAAMA,EAAEzB,MAAQyB,EAAEzB,WAAQ0B,GADpB,0CAIWD,GAAKA,EAAEE,MAAMC,aAJxB,kBAKGH,GAAKA,EAAEE,MAAMC,aALhB,mBAUXb,GAAmB,OAAOc,EAAAA,GAAP,qBAAH,yFAOhBX,GAAoB,OAAOY,EAAAA,GAAP,qBAAH,0FAMRL,GAAKA,EAAEE,MAAMI,eANL,WAOZN,GAAKA,EAAEE,MAAMK,SAPD,mBAUVP,GAAKA,EAAEE,MAAMM,SAVH,MAcvB","sources":["webpack:///./app/components/searchBar.tsx"],"sourcesContent":["import {createRef, PureComponent} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'sentry/components/button';\nimport Input, {InputProps} from 'sentry/components/input';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n  query: string;\n  onChange?: (query: string) => void;\n  width?: string;\n}\n\ntype State = {\n  dropdownVisible: boolean;\n  query: string;\n};\n\nclass SearchBar extends PureComponent<SearchBarProps, State> {\n  static defaultProps: Pick<SearchBarProps, 'query' | 'defaultQuery' | 'onSearch'> = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state: State = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: SearchBarProps) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    // Remove keys that should not be passed into Input\n    const {\n      className,\n      width,\n      query: _q,\n      defaultQuery,\n      onChange: _oC,\n      onSearch: _oS,\n      ...inputProps\n    } = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              {...inputProps}\n              type=\"text\"\n              className=\"search-input\"\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xs\"\n                icon={<IconClose />}\n                aria-label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n\n  &.focus-visible {\n    box-shadow: 0 0 0 1px ${p => p.theme.focusBorder};\n    border-color: ${p => p.theme.focusBorder};\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n"],"names":["SearchBar","PureComponent","query","this","props","defaultQuery","dropdownVisible","createRef","searchInputRef","current","blur","evt","preventDefault","onSearch","state","setState","callIfFunction","onChange","value","target","UNSAFE_componentWillReceiveProps","nextProps","render","className","width","_q","_oC","_oS","inputProps","classNames","onSubmit","StyledInput","type","name","ref","autoComplete","onBlur","onQueryBlur","onQueryChange","StyledIconSearch","size","color","SearchClearButton","priority","onClick","clearSearch","icon","t","Input","p","undefined","theme","focusBorder","IconSearch","Button","fontSizeLarge","gray200","gray300"],"sourceRoot":""}