{"version":3,"file":"chunks/app_components_avatarChooser_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/well.tsx","webpack:///./app/components/avatarCropper.tsx","webpack:///./app/components/avatarChooser.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\ninterface WellProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  centered?: boolean;\n  hasImage?: boolean;\n  theme?: any;\n}\n\nconst Well = styled('div')<WellProps>`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: none;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${p => (p.hasImage ? '80px 30px' : '15px 20px')};\n  margin-bottom: 20px;\n  border-radius: 3px;\n  ${p => p.centered && 'text-align: center'};\n`;\n\nexport default Well;\n","import {Component, createRef, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport Well from 'sentry/components/well';\nimport {AVATAR_URL_MAP} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport {AvatarUser} from 'sentry/types';\n\nconst resizerPositions = {\n  nw: ['top', 'left'],\n  ne: ['top', 'right'],\n  se: ['bottom', 'right'],\n  sw: ['bottom', 'left'],\n};\n\ntype Position = keyof typeof resizerPositions;\n\ntype Model = Pick<AvatarUser, 'avatar'>;\n\ntype Props = {\n  model: Model;\n  type:\n    | 'user'\n    | 'team'\n    | 'organization'\n    | 'project'\n    | 'sentryAppColor'\n    | 'sentryAppSimple'\n    | 'docIntegration';\n  updateDataUrlState: (opts: {dataUrl?: string; savedDataUrl?: string | null}) => void;\n  savedDataUrl?: string;\n};\n\ntype State = {\n  file: File | null;\n  mousePosition: {pageX: number; pageY: number};\n  objectURL: string | null;\n  resizeDimensions: {left: number; size: number; top: number};\n  resizeDirection: Position | null;\n};\n\nclass AvatarCropper extends Component<Props, State> {\n  state: State = {\n    file: null,\n    objectURL: null,\n    mousePosition: {pageX: 0, pageY: 0},\n    resizeDimensions: {top: 0, left: 0, size: 0},\n    resizeDirection: null,\n  };\n\n  componentWillUnmount() {\n    this.revokeObjectUrl();\n  }\n\n  file = createRef<HTMLInputElement>();\n  canvas = createRef<HTMLCanvasElement>();\n  image = createRef<HTMLImageElement>();\n  cropContainer = createRef<HTMLDivElement>();\n\n  // These values must be synced with the avatar endpoint in backend.\n  MIN_DIMENSION = 256;\n  MAX_DIMENSION = 1024;\n  ALLOWED_MIMETYPES = 'image/gif,image/jpeg,image/png';\n\n  onSelectFile = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const file = ev.target.files && ev.target.files[0];\n\n    // No file selected (e.g. user clicked \"cancel\")\n    if (!file) {\n      return;\n    }\n\n    if (!/^image\\//.test(file.type)) {\n      addErrorMessage(t('That is not a supported file type.'));\n      return;\n    }\n\n    this.revokeObjectUrl();\n\n    const {updateDataUrlState} = this.props;\n    const objectURL = window.URL.createObjectURL(file);\n    this.setState({file, objectURL}, () => updateDataUrlState({savedDataUrl: null}));\n  };\n\n  revokeObjectUrl = () =>\n    this.state.objectURL && window.URL.revokeObjectURL(this.state.objectURL);\n\n  onImageLoad = () => {\n    const error = this.validateImage();\n    if (error) {\n      this.revokeObjectUrl();\n      this.setState({objectURL: null});\n      addErrorMessage(error);\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const dimension = Math.min(image.clientHeight, image.clientWidth);\n    const state = {resizeDimensions: {size: dimension, top: 0, left: 0}};\n\n    this.setState(state, this.drawToCanvas);\n  };\n\n  updateDimensions = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition, resizeDimensions} = this.state;\n\n    let pageY = ev.pageY;\n    let pageX = ev.pageX;\n    let top = resizeDimensions.top + (pageY - mousePosition.pageY);\n    let left = resizeDimensions.left + (pageX - mousePosition.pageX);\n\n    if (top < 0) {\n      top = 0;\n      pageY = mousePosition.pageY;\n    } else if (top + resizeDimensions.size > cropContainer.clientHeight) {\n      top = cropContainer.clientHeight - resizeDimensions.size;\n      pageY = mousePosition.pageY;\n    }\n\n    if (left < 0) {\n      left = 0;\n      pageX = mousePosition.pageX;\n    } else if (left + resizeDimensions.size > cropContainer.clientWidth) {\n      left = cropContainer.clientWidth - resizeDimensions.size;\n      pageX = mousePosition.pageX;\n    }\n\n    this.setState(state => ({\n      resizeDimensions: {...state.resizeDimensions, top, left},\n      mousePosition: {pageX, pageY},\n    }));\n  };\n\n  onMouseDown = (ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.preventDefault();\n    this.setState({mousePosition: {pageY: ev.pageY, pageX: ev.pageX}});\n\n    document.addEventListener('mousemove', this.updateDimensions);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseUp = (ev: MouseEvent) => {\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateDimensions);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    this.drawToCanvas();\n  };\n\n  startResize = (direction: Position, ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.addEventListener('mousemove', this.updateSize);\n    document.addEventListener('mouseup', this.stopResize);\n\n    this.setState({\n      resizeDirection: direction,\n      mousePosition: {pageY: ev.pageY, pageX: ev.pageX},\n    });\n  };\n\n  stopResize = (ev: MouseEvent) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateSize);\n    document.removeEventListener('mouseup', this.stopResize);\n\n    this.setState({resizeDirection: null});\n    this.drawToCanvas();\n  };\n\n  updateSize = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition} = this.state;\n\n    const yDiff = ev.pageY - mousePosition.pageY;\n    const xDiff = ev.pageX - mousePosition.pageX;\n\n    this.setState({\n      resizeDimensions: this.getNewDimensions(cropContainer, yDiff, xDiff),\n      mousePosition: {pageX: ev.pageX, pageY: ev.pageY},\n    });\n  };\n\n  // Normalize diff across dimensions so that negative diffs are always making\n  // the cropper smaller and positive ones are making the cropper larger\n  getDiffNW = (yDiff: number, xDiff: number) =>\n    (yDiff - yDiff * 2 + (xDiff - xDiff * 2)) / 2;\n\n  getDiffNE = (yDiff: number, xDiff: number) => (yDiff - yDiff * 2 + xDiff) / 2;\n\n  getDiffSW = (yDiff: number, xDiff: number) => (yDiff + (xDiff - xDiff * 2)) / 2;\n\n  getDiffSE = (yDiff: number, xDiff: number) => (yDiff + xDiff) / 2;\n\n  getNewDimensions = (container: HTMLDivElement, yDiff: number, xDiff: number) => {\n    const {resizeDimensions: oldDimensions, resizeDirection} = this.state;\n\n    const diff = this['getDiff' + resizeDirection!.toUpperCase()](yDiff, xDiff);\n\n    let height = container.clientHeight - oldDimensions.top;\n    let width = container.clientWidth - oldDimensions.left;\n\n    // Depending on the direction, we update different dimensions:\n    // nw: size, top, left\n    // ne: size, top\n    // sw: size, left\n    // se: size\n    const editingTop = resizeDirection === 'nw' || resizeDirection === 'ne';\n    const editingLeft = resizeDirection === 'nw' || resizeDirection === 'sw';\n\n    const newDimensions = {\n      top: 0,\n      left: 0,\n      size: oldDimensions.size + diff,\n    };\n\n    if (editingTop) {\n      newDimensions.top = oldDimensions.top - diff;\n      height = container.clientHeight - newDimensions.top;\n    }\n\n    if (editingLeft) {\n      newDimensions.left = oldDimensions.left - diff;\n      width = container.clientWidth - newDimensions.left;\n    }\n\n    if (newDimensions.top < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.top;\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left - newDimensions.top;\n      }\n      newDimensions.top = 0;\n    }\n\n    if (newDimensions.left < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.left;\n      if (editingTop) {\n        newDimensions.top = newDimensions.top - newDimensions.left;\n      }\n      newDimensions.left = 0;\n    }\n\n    const maxSize = Math.min(width, height);\n    if (newDimensions.size > maxSize) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - maxSize;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - maxSize;\n      }\n      newDimensions.size = maxSize;\n    } else if (newDimensions.size < this.MIN_DIMENSION) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - this.MIN_DIMENSION;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - this.MIN_DIMENSION;\n      }\n      newDimensions.size = this.MIN_DIMENSION;\n    }\n\n    return {...oldDimensions, ...newDimensions};\n  };\n\n  validateImage() {\n    const img = this.image.current;\n\n    if (!img) {\n      return null;\n    }\n\n    if (img.naturalWidth < this.MIN_DIMENSION || img.naturalHeight < this.MIN_DIMENSION) {\n      return tct('Please upload an image larger than [size]px by [size]px.', {\n        size: this.MIN_DIMENSION - 1,\n      });\n    }\n\n    if (img.naturalWidth > this.MAX_DIMENSION || img.naturalHeight > this.MAX_DIMENSION) {\n      return tct('Please upload an image smaller than [size]px by [size]px.', {\n        size: this.MAX_DIMENSION,\n      });\n    }\n\n    return null;\n  }\n\n  drawToCanvas() {\n    const canvas = this.canvas.current;\n    if (!canvas) {\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const {left, top, size} = this.state.resizeDimensions;\n    // Calculate difference between natural dimensions and rendered dimensions\n    const ratio =\n      (image.naturalHeight / image.clientHeight +\n        image.naturalWidth / image.clientWidth) /\n      2;\n    canvas.width = size * ratio;\n    canvas.height = size * ratio;\n\n    canvas\n      .getContext('2d')!\n      .drawImage(\n        image,\n        left * ratio,\n        top * ratio,\n        size * ratio,\n        size * ratio,\n        0,\n        0,\n        size * ratio,\n        size * ratio\n      );\n\n    this.props.updateDataUrlState({dataUrl: canvas.toDataURL()});\n  }\n\n  get imageSrc() {\n    const {savedDataUrl, model, type} = this.props;\n    const uuid = model.avatar?.avatarUuid;\n    const photoUrl = uuid && `/${AVATAR_URL_MAP[type] || 'avatar'}/${uuid}/`;\n\n    return savedDataUrl || this.state.objectURL || photoUrl;\n  }\n\n  uploadClick = (ev: React.MouseEvent<HTMLAnchorElement>) => {\n    ev.preventDefault();\n    this.file.current && this.file.current.click();\n  };\n\n  renderImageCrop() {\n    const src = this.imageSrc;\n    if (!src) {\n      return null;\n    }\n\n    const {resizeDimensions, resizeDirection} = this.state;\n    const style = {\n      top: resizeDimensions.top,\n      left: resizeDimensions.left,\n      width: resizeDimensions.size,\n      height: resizeDimensions.size,\n    };\n\n    return (\n      <ImageCropper resizeDirection={resizeDirection}>\n        <CropContainer ref={this.cropContainer}>\n          <img\n            ref={this.image}\n            src={src}\n            onLoad={this.onImageLoad}\n            onDragStart={e => e.preventDefault()}\n          />\n          <Cropper style={style} onMouseDown={this.onMouseDown}>\n            {Object.keys(resizerPositions).map(pos => (\n              <Resizer\n                key={pos}\n                position={pos as Position}\n                onMouseDown={this.startResize.bind(this, pos)}\n              />\n            ))}\n          </Cropper>\n        </CropContainer>\n      </ImageCropper>\n    );\n  }\n\n  render() {\n    const src = this.imageSrc;\n\n    const upload = <a onClick={this.uploadClick} />;\n    const uploader = (\n      <Well hasImage centered>\n        <p>{tct('[upload:Upload an image] to get started.', {upload})}</p>\n      </Well>\n    );\n\n    return (\n      <Fragment>\n        {!src && uploader}\n        {src && <HiddenCanvas ref={this.canvas} />}\n        {this.renderImageCrop()}\n        <div className=\"form-group\">\n          {src && <a onClick={this.uploadClick}>{t('Change Photo')}</a>}\n          <UploadInput\n            ref={this.file}\n            type=\"file\"\n            accept={this.ALLOWED_MIMETYPES}\n            onChange={this.onSelectFile}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default AvatarCropper;\n\nconst UploadInput = styled('input')`\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageCropper = styled('div')<{resizeDirection: Position | null}>`\n  cursor: ${p => (p.resizeDirection ? `${p.resizeDirection}-resize` : 'default')};\n  text-align: center;\n  margin-bottom: 20px;\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  background-color: ${p => p.theme.background};\n  background-image: linear-gradient(\n      45deg,\n      ${p => p.theme.backgroundSecondary} 25%,\n      rgba(0, 0, 0, 0) 25%\n    ),\n    linear-gradient(-45deg, ${p => p.theme.backgroundSecondary} 25%, rgba(0, 0, 0, 0) 25%),\n    linear-gradient(45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%),\n    linear-gradient(-45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%);\n`;\n\nconst CropContainer = styled('div')`\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n`;\n\nconst Cropper = styled('div')`\n  position: absolute;\n  border: 2px dashed ${p => p.theme.gray300};\n`;\n\nconst Resizer = styled('div')<{position: Position}>`\n  border-radius: 5px;\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: ${p => p.theme.gray300};\n  cursor: ${p => `${p.position}-resize`};\n  ${p => resizerPositions[p.position].map(pos => `${pos}: -5px;`)}\n`;\n\nconst HiddenCanvas = styled('canvas')`\n  display: none;\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Avatar from 'sentry/components/avatar';\nimport AvatarCropper from 'sentry/components/avatarCropper';\nimport Button from 'sentry/components/button';\nimport RadioGroup from 'sentry/components/forms/controls/radioGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Well from 'sentry/components/well';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AvatarUser, Organization, SentryApp, Team} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\nexport type Model = Pick<AvatarUser, 'avatar'>;\ntype AvatarType = Required<Model>['avatar']['avatarType'];\ntype AvatarChooserType =\n  | 'user'\n  | 'team'\n  | 'organization'\n  | 'sentryAppColor'\n  | 'sentryAppSimple'\n  | 'docIntegration';\ntype DefaultChoice = {\n  allowDefault?: boolean;\n  choiceText?: string;\n  preview?: React.ReactNode;\n};\n\ntype DefaultProps = {\n  onSave: (model: Model) => void;\n  allowGravatar?: boolean;\n  allowLetter?: boolean;\n  allowUpload?: boolean;\n  defaultChoice?: DefaultChoice;\n  type?: AvatarChooserType;\n};\n\ntype Props = {\n  api: Client;\n  endpoint: string;\n  model: Model;\n  disabled?: boolean;\n  help?: React.ReactNode;\n  isUser?: boolean;\n  savedDataUrl?: string;\n  title?: string;\n} & DefaultProps;\n\ntype State = {\n  hasError: boolean;\n  model: Model;\n  dataUrl?: string | null;\n  savedDataUrl?: string | null;\n};\n\nclass AvatarChooser extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    allowGravatar: true,\n    allowLetter: true,\n    allowUpload: true,\n    type: 'user',\n    onSave: () => {},\n    defaultChoice: {\n      allowDefault: false,\n    },\n  };\n\n  state: State = {\n    model: this.props.model,\n    savedDataUrl: null,\n    dataUrl: null,\n    hasError: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    // Update local state if defined in props\n    if (typeof nextProps.model !== 'undefined') {\n      this.setState({model: nextProps.model});\n    }\n  }\n\n  updateState(model: Model) {\n    this.setState({model});\n  }\n\n  getModelFromResponse(resp: any): Model {\n    const {type} = this.props;\n    const isSentryApp = type?.startsWith('sentryApp');\n    // SentryApp endpoint returns all avatars, we need to return only the edited one\n    if (!isSentryApp) {\n      return resp;\n    }\n    const isColor = type === 'sentryAppColor';\n    return {avatar: resp?.avatars?.find(({color}) => color === isColor) ?? undefined};\n  }\n\n  handleError(msg: string) {\n    addErrorMessage(msg);\n  }\n\n  handleSuccess(model: Model) {\n    const {onSave} = this.props;\n    this.setState({model});\n    onSave(model);\n    addSuccessMessage(t('Successfully saved avatar preferences'));\n  }\n\n  handleSaveSettings = (ev: React.MouseEvent) => {\n    const {endpoint, api, type} = this.props;\n    const {model, dataUrl} = this.state;\n\n    ev.preventDefault();\n    const avatarType = model?.avatar?.avatarType;\n    const avatarPhoto = dataUrl?.split(',')[1];\n\n    const data: {\n      avatar_photo?: string;\n      avatar_type?: string;\n      color?: boolean;\n    } = {avatar_type: avatarType};\n\n    // If an image has been uploaded, then another option is selected, we should not submit the uploaded image\n    if (avatarType === 'upload') {\n      data.avatar_photo = avatarPhoto;\n    }\n\n    if (type?.startsWith('sentryApp')) {\n      data.color = type === 'sentryAppColor';\n    }\n\n    api.request(endpoint, {\n      method: 'PUT',\n      data,\n      success: resp => {\n        this.setState({savedDataUrl: this.state.dataUrl});\n        this.handleSuccess(this.getModelFromResponse(resp));\n      },\n      error: resp => {\n        const avatarPhotoErrors = resp?.responseJSON?.avatar_photo || [];\n        avatarPhotoErrors.length\n          ? avatarPhotoErrors.map(this.handleError)\n          : this.handleError.bind(this, t('There was an error saving your preferences.'));\n      },\n    });\n  };\n\n  handleChange = (id: AvatarType) =>\n    this.updateState({\n      ...this.state.model,\n      avatar: {avatarUuid: this.state.model.avatar?.avatarUuid ?? '', avatarType: id},\n    });\n\n  render() {\n    const {\n      allowGravatar,\n      allowUpload,\n      allowLetter,\n      savedDataUrl,\n      type,\n      isUser,\n      disabled,\n      title,\n      help,\n      defaultChoice,\n    } = this.props;\n    const {hasError, model} = this.state;\n\n    if (hasError) {\n      return <LoadingError />;\n    }\n    if (!model) {\n      return <LoadingIndicator />;\n    }\n    const {allowDefault, preview, choiceText: defaultChoiceText} = defaultChoice || {};\n\n    const avatarType = model.avatar?.avatarType ?? 'letter_avatar';\n    const isLetter = avatarType === 'letter_avatar';\n    const isDefault = Boolean(preview && avatarType === 'default');\n\n    const isTeam = type === 'team';\n    const isOrganization = type === 'organization';\n    const isSentryApp = type?.startsWith('sentryApp');\n\n    const choices: [AvatarType, string][] = [];\n\n    if (allowDefault && preview) {\n      choices.push(['default', defaultChoiceText ?? t('Use default avatar')]);\n    }\n    if (allowLetter) {\n      choices.push(['letter_avatar', t('Use initials')]);\n    }\n    if (allowUpload) {\n      choices.push(['upload', t('Upload an image')]);\n    }\n    if (allowGravatar) {\n      choices.push(['gravatar', t('Use Gravatar')]);\n    }\n    return (\n      <Panel>\n        <PanelHeader>{title || t('Avatar')}</PanelHeader>\n        <PanelBody>\n          <AvatarForm>\n            <AvatarGroup inline={isLetter || isDefault}>\n              <RadioGroup\n                style={{flex: 1}}\n                choices={choices}\n                value={avatarType}\n                label={t('Avatar Type')}\n                onChange={this.handleChange}\n                disabled={disabled}\n              />\n              {isLetter && (\n                <Avatar\n                  gravatar={false}\n                  style={{width: 90, height: 90}}\n                  user={isUser ? (model as AvatarUser) : undefined}\n                  organization={isOrganization ? (model as Organization) : undefined}\n                  team={isTeam ? (model as Team) : undefined}\n                  sentryApp={isSentryApp ? (model as SentryApp) : undefined}\n                />\n              )}\n              {isDefault && preview}\n            </AvatarGroup>\n            <AvatarUploadSection>\n              {allowGravatar && avatarType === 'gravatar' && (\n                <Well>\n                  {t('Gravatars are managed through ')}\n                  <ExternalLink href=\"http://gravatar.com\">Gravatar.com</ExternalLink>\n                </Well>\n              )}\n              {model.avatar && avatarType === 'upload' && (\n                <AvatarCropper\n                  {...this.props}\n                  type={type!}\n                  model={model}\n                  savedDataUrl={savedDataUrl}\n                  updateDataUrlState={dataState => this.setState(dataState)}\n                />\n              )}\n              <AvatarSubmit className=\"form-actions\">\n                {help && <AvatarHelp>{help}</AvatarHelp>}\n                <Button\n                  type=\"button\"\n                  priority=\"primary\"\n                  onClick={this.handleSaveSettings}\n                  disabled={disabled}\n                >\n                  {t('Save Avatar')}\n                </Button>\n              </AvatarSubmit>\n            </AvatarUploadSection>\n          </AvatarForm>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst AvatarHelp = styled('p')`\n  margin-right: auto;\n  color: ${p => p.theme.gray300};\n  font-size: 14px;\n  width: 50%;\n`;\n\nconst AvatarGroup = styled('div')<{inline: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.inline ? 'row' : 'column')};\n`;\n\nconst AvatarForm = styled('div')`\n  line-height: ${space(3)};\n  padding: ${space(1.5)} ${space(2)};\n  margin: ${space(1.5)} ${space(1)} ${space(0.5)};\n`;\n\nconst AvatarSubmit = styled('fieldset')`\n  display: flex;\n  align-items: center;\n  margin-top: ${space(4)};\n  padding-top: ${space(1.5)};\n`;\n\nconst AvatarUploadSection = styled('div')`\n  margin-top: ${space(1.5)};\n`;\n\nexport default withApi(AvatarChooser);\n"],"names":["p","theme","border","backgroundSecondary","hasImage","centered","resizerPositions","nw","ne","se","sw","AvatarCropper","Component","file","objectURL","mousePosition","pageX","pageY","resizeDimensions","top","left","size","resizeDirection","createRef","ev","target","files","test","type","addErrorMessage","t","this","revokeObjectUrl","updateDataUrlState","props","window","URL","createObjectURL","setState","savedDataUrl","state","revokeObjectURL","error","validateImage","image","current","Math","min","clientHeight","clientWidth","drawToCanvas","cropContainer","preventDefault","document","addEventListener","updateDimensions","onMouseUp","removeEventListener","direction","stopPropagation","updateSize","stopResize","yDiff","xDiff","getNewDimensions","container","oldDimensions","diff","toUpperCase","height","width","editingTop","editingLeft","newDimensions","maxSize","MIN_DIMENSION","click","componentWillUnmount","img","naturalWidth","naturalHeight","tct","MAX_DIMENSION","canvas","ratio","getContext","drawImage","dataUrl","toDataURL","imageSrc","model","uuid","avatar","avatarUuid","photoUrl","AVATAR_URL_MAP","renderImageCrop","src","style","ImageCropper","CropContainer","ref","onLoad","onImageLoad","onDragStart","e","Cropper","onMouseDown","Object","keys","map","pos","Resizer","position","startResize","bind","render","upload","onClick","uploadClick","uploader","Fragment","HiddenCanvas","className","UploadInput","accept","ALLOWED_MIMETYPES","onChange","onSelectFile","background","gray300","AvatarChooser","hasError","endpoint","api","avatarType","avatarPhoto","split","data","avatar_type","avatar_photo","startsWith","color","request","method","success","resp","handleSuccess","getModelFromResponse","avatarPhotoErrors","responseJSON","length","handleError","id","updateState","UNSAFE_componentWillReceiveProps","nextProps","isColor","avatars","find","undefined","msg","onSave","addSuccessMessage","allowGravatar","allowUpload","allowLetter","isUser","disabled","title","help","defaultChoice","allowDefault","preview","choiceText","defaultChoiceText","isLetter","isDefault","Boolean","isTeam","isOrganization","isSentryApp","choices","push","AvatarForm","AvatarGroup","inline","flex","value","label","handleChange","gravatar","user","organization","team","sentryApp","AvatarUploadSection","href","dataState","AvatarSubmit","AvatarHelp","priority","handleSaveSettings","space","withApi"],"sourceRoot":""}