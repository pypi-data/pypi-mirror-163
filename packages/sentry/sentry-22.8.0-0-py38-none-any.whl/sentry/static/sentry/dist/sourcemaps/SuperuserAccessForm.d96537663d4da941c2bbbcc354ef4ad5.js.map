{"version":3,"file":"chunks/SuperuserAccessForm.xxxxxxxxxxxxxxxxxxxx.js","mappings":"24BAyBA,MAAMA,UAA4BC,EAAAA,UAAwB,uDACzC,CACbC,OAAO,EACPC,UAAW,MAH2C,4BAMzCC,UACb,MAAM,IAACC,GAAOC,KAAKC,MACbC,EAAO,CACXC,kBAAkB,EAClBC,wBAAyB,WACzBC,gBAAiB,oBAEnB,UACQN,EAAIO,eAAe,SAAU,CAACC,OAAQ,MAAOL,KAAAA,IACnDF,KAAKQ,gBACL,MAAOC,GACPT,KAAKU,YAAYD,QAjBmC,6BAqBxC,KACdE,OAAOC,SAASC,aAtBsC,2BAyB1CJ,IACZ,IAAIZ,EAAY,GAEdA,EADiB,MAAfY,EAAIK,OACMC,EAAAA,EAAAA,gBACY,MAAfN,EAAIK,OACDC,EAAAA,EAAAA,kBACY,MAAfN,EAAIK,OACDC,EAAAA,EAAAA,sBAEAA,EAAAA,EAAAA,aAEdf,KAAKgB,SAAS,CACZpB,OAAO,EACPC,UAAAA,QAtCoD,4BA0CzCC,UACb,MAAM,IAACC,GAAOC,KAAKC,MACnB,UACQgB,EAAAA,EAAAA,IAAOlB,GACb,OAGFY,OAAOC,SAASM,OAAO,mBAGzBC,SACE,MAAM,MAACvB,EAAD,UAAQC,GAAaG,KAAKoB,MAChC,OAAIvB,IAAckB,EAAAA,EAAAA,mBAChBf,KAAKqB,eACE,OAGP,QAAC,IAAD,WACE,QAAC,IAAD,CACEC,UAAU,MACVC,YAAY,SACZC,aAAaC,EAAAA,EAAAA,GAAE,YACfC,gBAAiB1B,KAAKQ,cACtBmB,cAAe3B,KAAKU,YACpBkB,YAAa,CAACzB,kBAAkB,GAChC0B,aACE,QAACC,EAAD,WACE,QAAC,KAAD,CAAQC,QAAS/B,KAAKgC,aAAtB,UAAqCP,EAAAA,EAAAA,GAAE,gBAG3CQ,cAAY,EAZd,UAcGrC,IACC,QAACsC,EAAD,CAAaC,KAAK,QAAQC,UAAQ,EAAlC,UACGX,EAAAA,EAAAA,GAAE5B,MAGP,QAAC,IAAD,CAAMwC,KAAK,8CA/Ef3C,EAAAA,YAAAA,sBAsFN,MAAMwC,GAAc,OAAOI,EAAAA,EAAP,qBAAH,2CAIXR,GAAc,OAAO,MAAP,qBAAH,2BAEAS,EAAAA,EAAAA,GAAM,GAFN,KAKjB,GAAeC,EAAAA,EAAAA,GAAQ9C,I,sDCxHhB,IAAKqB,E,0BAAAA,GAAAA,EAAAA,gBAAAA,qBAAAA,EAAAA,kBAAAA,sDAAAA,EAAAA,sBAAAA,2DAAAA,EAAAA,aAAAA,qC,CAAAA,IAAAA,EAAAA","sources":["webpack:///./app/components/superuserAccessForm.tsx","webpack:///./app/constants/superuserAccessErrors.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Form from 'sentry/components/forms/form';\nimport Hook from 'sentry/components/hook';\nimport ThemeAndStyleProvider from 'sentry/components/themeAndStyleProvider';\nimport {ErrorCodes} from 'sentry/constants/superuserAccessErrors';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport withApi from 'sentry/utils/withApi';\n\nimport Button from './button';\n\ntype Props = {\n  api: Client;\n};\n\ntype State = {\n  error: boolean;\n  errorType: string;\n};\n\nclass SuperuserAccessForm extends Component<Props, State> {\n  state: State = {\n    error: false,\n    errorType: '',\n  };\n\n  handleSubmit = async () => {\n    const {api} = this.props;\n    const data = {\n      isSuperuserModal: true,\n      superuserAccessCategory: 'cops_csm',\n      superuserReason: 'COPS and CSM use',\n    };\n    try {\n      await api.requestPromise('/auth/', {method: 'PUT', data});\n      this.handleSuccess();\n    } catch (err) {\n      this.handleError(err);\n    }\n  };\n\n  handleSuccess = () => {\n    window.location.reload();\n  };\n\n  handleError = err => {\n    let errorType = '';\n    if (err.status === 403) {\n      errorType = ErrorCodes.invalidPassword;\n    } else if (err.status === 401) {\n      errorType = ErrorCodes.invalidSSOSession;\n    } else if (err.status === 400) {\n      errorType = ErrorCodes.invalidAccessCategory;\n    } else {\n      errorType = ErrorCodes.unknownError;\n    }\n    this.setState({\n      error: true,\n      errorType,\n    });\n  };\n\n  handleLogout = async () => {\n    const {api} = this.props;\n    try {\n      await logout(api);\n    } catch {\n      // ignore errors\n    }\n    window.location.assign('/auth/login/');\n  };\n\n  render() {\n    const {error, errorType} = this.state;\n    if (errorType === ErrorCodes.invalidSSOSession) {\n      this.handleLogout();\n      return null;\n    }\n    return (\n      <ThemeAndStyleProvider>\n        <Form\n          apiMethod=\"PUT\"\n          apiEndpoint=\"/auth/\"\n          submitLabel={t('Continue')}\n          onSubmitSuccess={this.handleSuccess}\n          onSubmitError={this.handleError}\n          initialData={{isSuperuserModal: true}}\n          extraButton={\n            <BackWrapper>\n              <Button onClick={this.handleSubmit}>{t('COPS/CSM')}</Button>\n            </BackWrapper>\n          }\n          resetOnError\n        >\n          {error && (\n            <StyledAlert type=\"error\" showIcon>\n              {t(errorType)}\n            </StyledAlert>\n          )}\n          <Hook name=\"component:superuser-access-category\" />\n        </Form>\n      </ThemeAndStyleProvider>\n    );\n  }\n}\n\nconst StyledAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n\nconst BackWrapper = styled('div')`\n  width: 100%;\n  margin-left: ${space(4)};\n`;\n\nexport default withApi(SuperuserAccessForm);\n","export enum ErrorCodes {\n  invalidPassword = 'Incorrect password',\n  invalidSSOSession = 'Your SSO Session has expired, please reauthenticate',\n  invalidAccessCategory = 'Please fill out the access category and reason correctly',\n  unknownError = 'An error ocurred, please try again',\n}\n"],"names":["SuperuserAccessForm","Component","error","errorType","async","api","this","props","data","isSuperuserModal","superuserAccessCategory","superuserReason","requestPromise","method","handleSuccess","err","handleError","window","location","reload","status","ErrorCodes","setState","logout","assign","render","state","handleLogout","apiMethod","apiEndpoint","submitLabel","t","onSubmitSuccess","onSubmitError","initialData","extraButton","BackWrapper","onClick","handleSubmit","resetOnError","StyledAlert","type","showIcon","name","Alert","space","withApi"],"sourceRoot":""}