{"version":3,"file":"chunks/app_components_platformPicker_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/platformPicker.tsx"],"sourcesContent":["import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport categoryList, {filterAliases, PlatformKey} from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {IconClose, IconProject, IconSearch} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {inputStyles} from 'sentry/styles/input';\nimport space from 'sentry/styles/space';\nimport {Organization, PlatformIntegration} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nconst PLATFORM_CATEGORIES = [...categoryList, {id: 'all', name: t('All')}] as const;\n\nconst PlatformList = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\ntype Category = typeof PLATFORM_CATEGORIES[number]['id'];\n\ninterface PlatformPickerProps {\n  setPlatform: (key: PlatformKey | null) => void;\n  defaultCategory?: Category;\n  listClassName?: string;\n  listProps?: React.HTMLAttributes<HTMLDivElement>;\n  noAutoFilter?: boolean;\n  organization?: Organization;\n  platform?: string | null;\n  showOther?: boolean;\n  source?: string;\n}\n\ntype State = {\n  category: Category;\n  filter: string;\n};\n\nclass PlatformPicker extends Component<PlatformPickerProps, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: this.props.defaultCategory ?? PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) ||\n      platform.name.toLowerCase().includes(filter) ||\n      filterAliases[platform.id as PlatformKey]?.some(alias => alias.includes(filter));\n\n    const categoryMatch = (platform: PlatformIntegration) =>\n      category === 'all' ||\n      (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      trackAdvancedAnalyticsEvent('growth.platformpicker_search', {\n        search: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n        source: this.props.source,\n        organization: this.props.organization ?? null,\n      });\n    }\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  trackAdvancedAnalyticsEvent('growth.platformpicker_category', {\n                    category: id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <SearchBar>\n            <IconSearch size=\"xs\" />\n            <input\n              type=\"text\"\n              value={filter}\n              placeholder={t('Filter Platforms')}\n              onChange={e => this.setState({filter: e.target.value}, this.logSearch)}\n            />\n          </SearchBar>\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => (\n            <PlatformCard\n              data-test-id={`platform-${platform.id}`}\n              key={platform.id}\n              platform={platform}\n              selected={this.props.platform === platform.id}\n              onClear={(e: React.MouseEvent) => {\n                setPlatform(null);\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                trackAdvancedAnalyticsEvent('growth.select_platform', {\n                  platform_id: platform.id,\n                  source: this.props.source,\n                  organization: this.props.organization ?? null,\n                });\n                setPlatform(platform.id as PlatformKey);\n              }}\n            />\n          ))}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst SearchBar = styled('div')`\n  ${p => inputStyles(p)};\n  padding: 0 8px;\n  color: ${p => p.theme.subText};\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  margin-top: -${space(0.75)};\n\n  input {\n    border: none;\n    background: none;\n    padding: 2px 4px;\n    width: 100%;\n    /* Ensure a consistent line height to keep the input the desired height */\n    line-height: 24px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  min-height: 0;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xs',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} aria-label={t('Clear')} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  cursor: pointer;\n  background: ${p => p.selected && p.theme.alert.info.backgroundLight};\n\n  &:hover {\n    background: ${p => p.theme.alert.muted.backgroundLight};\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => (p.selected ? p.theme.textColor : p.theme.subText)};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n"],"names":["ListLink","Component","_classNames","className","activeClassName","this","props","isActive","classNames","to","query","index","router","queryData","qs","undefined","target","pathname","render","children","disabled","carriedProps","omit","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","p","theme","PLATFORM_CATEGORIES","categoryList","id","name","t","PlatformList","space","PlatformPicker","category","defaultCategory","filter","noAutoFilter","platform","split","debounce","state","trackAdvancedAnalyticsEvent","search","toLowerCase","num_results","platformList","length","source","organization","DEFAULT_DEBOUNCE_DURATION","currentCategory","filtered","platforms","includes","filterAliases","some","alias","sort","a","b","localeCompare","showOther","setPlatform","listProps","listClassName","Fragment","NavContainer","CategoryNav","map","onClick","e","setState","preventDefault","SearchBar","size","type","value","placeholder","onChange","logSearch","PlatformCard","selected","onClear","stopPropagation","platform_id","icon","title","tct","href","border","inputStyles","subText","NavTabs","StyledPlatformIcon","PlatformIcon","ClearButton","Button","background","textColor","defaultProps","isCircled","borderless","radius","withLanguageIcon","format","alert","info","backgroundLight","muted","fontSizeExtraSmall"],"sourceRoot":""}