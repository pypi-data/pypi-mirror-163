{"version":3,"file":"chunks/vendors-node_modules_lodash_flattenDepth_js-node_modules_react-hotkeys-hook_dist_react-hotkey-c3d5cd.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///../node_modules/lodash/flattenDepth.js","webpack:///../node_modules/hotkeys-js/dist/hotkeys.esm.js","webpack:///../node_modules/react-hotkeys-hook/dist/react-hotkeys-hook.esm.js"],"sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n","/**! \n * hotkeys-js v3.9.3 \n * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies. \n * \n * Copyright (c) 2022 kenny wong <wowohoo@qq.com> \n * http://jaywcjlove.github.io/hotkeys \n * Licensed under the MIT license \n */\n\nvar isff = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase().indexOf('firefox') > 0 : false; // 绑定事件\n\nfunction addEvent(object, event, method, useCapture) {\n  if (object.addEventListener) {\n    object.addEventListener(event, method, useCapture);\n  } else if (object.attachEvent) {\n    object.attachEvent(\"on\".concat(event), function () {\n      method(window.event);\n    });\n  }\n} // 修饰键转换成对应的键码\n\n\nfunction getMods(modifier, key) {\n  var mods = key.slice(0, key.length - 1);\n\n  for (var i = 0; i < mods.length; i++) {\n    mods[i] = modifier[mods[i].toLowerCase()];\n  }\n\n  return mods;\n} // 处理传的key字符串转换成数组\n\n\nfunction getKeys(key) {\n  if (typeof key !== 'string') key = '';\n  key = key.replace(/\\s/g, ''); // 匹配任何空白字符,包括空格、制表符、换页符等等\n\n  var keys = key.split(','); // 同时设置多个快捷键，以','分割\n\n  var index = keys.lastIndexOf(''); // 快捷键可能包含','，需特殊处理\n\n  for (; index >= 0;) {\n    keys[index - 1] += ',';\n    keys.splice(index, 1);\n    index = keys.lastIndexOf('');\n  }\n\n  return keys;\n} // 比较修饰键的数组\n\n\nfunction compareArray(a1, a2) {\n  var arr1 = a1.length >= a2.length ? a1 : a2;\n  var arr2 = a1.length >= a2.length ? a2 : a1;\n  var isIndex = true;\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr2.indexOf(arr1[i]) === -1) isIndex = false;\n  }\n\n  return isIndex;\n}\n\nvar _keyMap = {\n  backspace: 8,\n  tab: 9,\n  clear: 12,\n  enter: 13,\n  return: 13,\n  esc: 27,\n  escape: 27,\n  space: 32,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  del: 46,\n  delete: 46,\n  ins: 45,\n  insert: 45,\n  home: 36,\n  end: 35,\n  pageup: 33,\n  pagedown: 34,\n  capslock: 20,\n  num_0: 96,\n  num_1: 97,\n  num_2: 98,\n  num_3: 99,\n  num_4: 100,\n  num_5: 101,\n  num_6: 102,\n  num_7: 103,\n  num_8: 104,\n  num_9: 105,\n  num_multiply: 106,\n  num_add: 107,\n  num_enter: 108,\n  num_subtract: 109,\n  num_decimal: 110,\n  num_divide: 111,\n  '⇪': 20,\n  ',': 188,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '-': isff ? 173 : 189,\n  '=': isff ? 61 : 187,\n  ';': isff ? 59 : 186,\n  '\\'': 222,\n  '[': 219,\n  ']': 221,\n  '\\\\': 220\n}; // Modifier Keys\n\nvar _modifier = {\n  // shiftKey\n  '⇧': 16,\n  shift: 16,\n  // altKey\n  '⌥': 18,\n  alt: 18,\n  option: 18,\n  // ctrlKey\n  '⌃': 17,\n  ctrl: 17,\n  control: 17,\n  // metaKey\n  '⌘': 91,\n  cmd: 91,\n  command: 91\n};\nvar modifierMap = {\n  16: 'shiftKey',\n  18: 'altKey',\n  17: 'ctrlKey',\n  91: 'metaKey',\n  shiftKey: 16,\n  ctrlKey: 17,\n  altKey: 18,\n  metaKey: 91\n};\nvar _mods = {\n  16: false,\n  18: false,\n  17: false,\n  91: false\n};\nvar _handlers = {}; // F1~F12 special key\n\nfor (var k = 1; k < 20; k++) {\n  _keyMap[\"f\".concat(k)] = 111 + k;\n}\n\nvar _downKeys = []; // 记录摁下的绑定键\n\nvar winListendFocus = false; // window是否已经监听了focus事件\n\nvar _scope = 'all'; // 默认热键范围\n\nvar elementHasBindEvent = []; // 已绑定事件的节点记录\n// 返回键码\n\nvar code = function code(x) {\n  return _keyMap[x.toLowerCase()] || _modifier[x.toLowerCase()] || x.toUpperCase().charCodeAt(0);\n}; // 设置获取当前范围（默认为'所有'）\n\n\nfunction setScope(scope) {\n  _scope = scope || 'all';\n} // 获取当前范围\n\n\nfunction getScope() {\n  return _scope || 'all';\n} // 获取摁下绑定键的键值\n\n\nfunction getPressedKeyCodes() {\n  return _downKeys.slice(0);\n} // 表单控件控件判断 返回 Boolean\n// hotkey is effective only when filter return true\n\n\nfunction filter(event) {\n  var target = event.target || event.srcElement;\n  var tagName = target.tagName;\n  var flag = true; // ignore: isContentEditable === 'true', <input> and <textarea> when readOnly state is false, <select>\n\n  if (target.isContentEditable || (tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT') && !target.readOnly) {\n    flag = false;\n  }\n\n  return flag;\n} // 判断摁下的键是否为某个键，返回true或者false\n\n\nfunction isPressed(keyCode) {\n  if (typeof keyCode === 'string') {\n    keyCode = code(keyCode); // 转换成键码\n  }\n\n  return _downKeys.indexOf(keyCode) !== -1;\n} // 循环删除handlers中的所有 scope(范围)\n\n\nfunction deleteScope(scope, newScope) {\n  var handlers;\n  var i; // 没有指定scope，获取scope\n\n  if (!scope) scope = getScope();\n\n  for (var key in _handlers) {\n    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {\n      handlers = _handlers[key];\n\n      for (i = 0; i < handlers.length;) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);else i++;\n      }\n    }\n  } // 如果scope被删除，将scope重置为all\n\n\n  if (getScope() === scope) setScope(newScope || 'all');\n} // 清除修饰键\n\n\nfunction clearModifier(event) {\n  var key = event.keyCode || event.which || event.charCode;\n\n  var i = _downKeys.indexOf(key); // 从列表中清除按压过的键\n\n\n  if (i >= 0) {\n    _downKeys.splice(i, 1);\n  } // 特殊处理 cmmand 键，在 cmmand 组合快捷键 keyup 只执行一次的问题\n\n\n  if (event.key && event.key.toLowerCase() === 'meta') {\n    _downKeys.splice(0, _downKeys.length);\n  } // 修饰键 shiftKey altKey ctrlKey (command||metaKey) 清除\n\n\n  if (key === 93 || key === 224) key = 91;\n\n  if (key in _mods) {\n    _mods[key] = false; // 将修饰键重置为false\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = false;\n    }\n  }\n}\n\nfunction unbind(keysInfo) {\n  // unbind(), unbind all keys\n  if (!keysInfo) {\n    Object.keys(_handlers).forEach(function (key) {\n      return delete _handlers[key];\n    });\n  } else if (Array.isArray(keysInfo)) {\n    // support like : unbind([{key: 'ctrl+a', scope: 's1'}, {key: 'ctrl-a', scope: 's2', splitKey: '-'}])\n    keysInfo.forEach(function (info) {\n      if (info.key) eachUnbind(info);\n    });\n  } else if (typeof keysInfo === 'object') {\n    // support like unbind({key: 'ctrl+a, ctrl+b', scope:'abc'})\n    if (keysInfo.key) eachUnbind(keysInfo);\n  } else if (typeof keysInfo === 'string') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // support old method\n    // eslint-disable-line\n    var scope = args[0],\n        method = args[1];\n\n    if (typeof scope === 'function') {\n      method = scope;\n      scope = '';\n    }\n\n    eachUnbind({\n      key: keysInfo,\n      scope: scope,\n      method: method,\n      splitKey: '+'\n    });\n  }\n} // 解除绑定某个范围的快捷键\n\n\nvar eachUnbind = function eachUnbind(_ref) {\n  var key = _ref.key,\n      scope = _ref.scope,\n      method = _ref.method,\n      _ref$splitKey = _ref.splitKey,\n      splitKey = _ref$splitKey === void 0 ? '+' : _ref$splitKey;\n  var multipleKeys = getKeys(key);\n  multipleKeys.forEach(function (originKey) {\n    var unbindKeys = originKey.split(splitKey);\n    var len = unbindKeys.length;\n    var lastKey = unbindKeys[len - 1];\n    var keyCode = lastKey === '*' ? '*' : code(lastKey);\n    if (!_handlers[keyCode]) return; // 判断是否传入范围，没有就获取范围\n\n    if (!scope) scope = getScope();\n    var mods = len > 1 ? getMods(_modifier, unbindKeys) : [];\n    _handlers[keyCode] = _handlers[keyCode].filter(function (record) {\n      // 通过函数判断，是否解除绑定，函数相等直接返回\n      var isMatchingMethod = method ? record.method === method : true;\n      return !(isMatchingMethod && record.scope === scope && compareArray(record.mods, mods));\n    });\n  });\n}; // 对监听对应快捷键的回调函数进行处理\n\n\nfunction eventHandler(event, handler, scope, element) {\n  if (handler.element !== element) {\n    return;\n  }\n\n  var modifiersMatch; // 看它是否在当前范围\n\n  if (handler.scope === scope || handler.scope === 'all') {\n    // 检查是否匹配修饰符（如果有返回true）\n    modifiersMatch = handler.mods.length > 0;\n\n    for (var y in _mods) {\n      if (Object.prototype.hasOwnProperty.call(_mods, y)) {\n        if (!_mods[y] && handler.mods.indexOf(+y) > -1 || _mods[y] && handler.mods.indexOf(+y) === -1) {\n          modifiersMatch = false;\n        }\n      }\n    } // 调用处理程序，如果是修饰键不做处理\n\n\n    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === '*') {\n      if (handler.method(event, handler) === false) {\n        if (event.preventDefault) event.preventDefault();else event.returnValue = false;\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.cancelBubble) event.cancelBubble = true;\n      }\n    }\n  }\n} // 处理keydown事件\n\n\nfunction dispatch(event, element) {\n  var asterisk = _handlers['*'];\n  var key = event.keyCode || event.which || event.charCode; // 表单控件过滤 默认表单控件不触发快捷键\n\n  if (!hotkeys.filter.call(this, event)) return; // Gecko(Firefox)的command键值224，在Webkit(Chrome)中保持一致\n  // Webkit左右 command 键值不一样\n\n  if (key === 93 || key === 224) key = 91;\n  /**\n   * Collect bound keys\n   * If an Input Method Editor is processing key input and the event is keydown, return 229.\n   * https://stackoverflow.com/questions/25043934/is-it-ok-to-ignore-keydown-events-with-keycode-229\n   * http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n   */\n\n  if (_downKeys.indexOf(key) === -1 && key !== 229) _downKeys.push(key);\n  /**\n   * Jest test cases are required.\n   * ===============================\n   */\n\n  ['ctrlKey', 'altKey', 'shiftKey', 'metaKey'].forEach(function (keyName) {\n    var keyNum = modifierMap[keyName];\n\n    if (event[keyName] && _downKeys.indexOf(keyNum) === -1) {\n      _downKeys.push(keyNum);\n    } else if (!event[keyName] && _downKeys.indexOf(keyNum) > -1) {\n      _downKeys.splice(_downKeys.indexOf(keyNum), 1);\n    } else if (keyName === 'metaKey' && event[keyName] && _downKeys.length === 3) {\n      /**\n       * Fix if Command is pressed:\n       * ===============================\n       */\n      if (!(event.ctrlKey || event.shiftKey || event.altKey)) {\n        _downKeys = _downKeys.slice(_downKeys.indexOf(keyNum));\n      }\n    }\n  });\n  /**\n   * -------------------------------\n   */\n\n  if (key in _mods) {\n    _mods[key] = true; // 将特殊字符的key注册到 hotkeys 上\n\n    for (var k in _modifier) {\n      if (_modifier[k] === key) hotkeys[k] = true;\n    }\n\n    if (!asterisk) return;\n  } // 将 modifierMap 里面的修饰键绑定到 event 中\n\n\n  for (var e in _mods) {\n    if (Object.prototype.hasOwnProperty.call(_mods, e)) {\n      _mods[e] = event[modifierMap[e]];\n    }\n  }\n  /**\n   * https://github.com/jaywcjlove/hotkeys/pull/129\n   * This solves the issue in Firefox on Windows where hotkeys corresponding to special characters would not trigger.\n   * An example of this is ctrl+alt+m on a Swedish keyboard which is used to type μ.\n   * Browser support: https://caniuse.com/#feat=keyboardevent-getmodifierstate\n   */\n\n\n  if (event.getModifierState && !(event.altKey && !event.ctrlKey) && event.getModifierState('AltGraph')) {\n    if (_downKeys.indexOf(17) === -1) {\n      _downKeys.push(17);\n    }\n\n    if (_downKeys.indexOf(18) === -1) {\n      _downKeys.push(18);\n    }\n\n    _mods[17] = true;\n    _mods[18] = true;\n  } // 获取范围 默认为 `all`\n\n\n  var scope = getScope(); // 对任何快捷键都需要做的处理\n\n  if (asterisk) {\n    for (var i = 0; i < asterisk.length; i++) {\n      if (asterisk[i].scope === scope && (event.type === 'keydown' && asterisk[i].keydown || event.type === 'keyup' && asterisk[i].keyup)) {\n        eventHandler(event, asterisk[i], scope, element);\n      }\n    }\n  } // key 不在 _handlers 中返回\n\n\n  if (!(key in _handlers)) return;\n\n  for (var _i = 0; _i < _handlers[key].length; _i++) {\n    if (event.type === 'keydown' && _handlers[key][_i].keydown || event.type === 'keyup' && _handlers[key][_i].keyup) {\n      if (_handlers[key][_i].key) {\n        var record = _handlers[key][_i];\n        var splitKey = record.splitKey;\n        var keyShortcut = record.key.split(splitKey);\n        var _downKeysCurrent = []; // 记录当前按键键值\n\n        for (var a = 0; a < keyShortcut.length; a++) {\n          _downKeysCurrent.push(code(keyShortcut[a]));\n        }\n\n        if (_downKeysCurrent.sort().join('') === _downKeys.sort().join('')) {\n          // 找到处理内容\n          eventHandler(event, record, scope, element);\n        }\n      }\n    }\n  }\n} // 判断 element 是否已经绑定事件\n\n\nfunction isElementBind(element) {\n  return elementHasBindEvent.indexOf(element) > -1;\n}\n\nfunction hotkeys(key, option, method) {\n  _downKeys = [];\n  var keys = getKeys(key); // 需要处理的快捷键列表\n\n  var mods = [];\n  var scope = 'all'; // scope默认为all，所有范围都有效\n\n  var element = document; // 快捷键事件绑定节点\n\n  var i = 0;\n  var keyup = false;\n  var keydown = true;\n  var splitKey = '+';\n  var capture = false; // 对为设定范围的判断\n\n  if (method === undefined && typeof option === 'function') {\n    method = option;\n  }\n\n  if (Object.prototype.toString.call(option) === '[object Object]') {\n    if (option.scope) scope = option.scope; // eslint-disable-line\n\n    if (option.element) element = option.element; // eslint-disable-line\n\n    if (option.keyup) keyup = option.keyup; // eslint-disable-line\n\n    if (option.keydown !== undefined) keydown = option.keydown; // eslint-disable-line\n\n    if (option.capture !== undefined) capture = option.capture; // eslint-disable-line\n\n    if (typeof option.splitKey === 'string') splitKey = option.splitKey; // eslint-disable-line\n  }\n\n  if (typeof option === 'string') scope = option; // 对于每个快捷键进行处理\n\n  for (; i < keys.length; i++) {\n    key = keys[i].split(splitKey); // 按键列表\n\n    mods = []; // 如果是组合快捷键取得组合快捷键\n\n    if (key.length > 1) mods = getMods(_modifier, key); // 将非修饰键转化为键码\n\n    key = key[key.length - 1];\n    key = key === '*' ? '*' : code(key); // *表示匹配所有快捷键\n    // 判断key是否在_handlers中，不在就赋一个空数组\n\n    if (!(key in _handlers)) _handlers[key] = [];\n\n    _handlers[key].push({\n      keyup: keyup,\n      keydown: keydown,\n      scope: scope,\n      mods: mods,\n      shortcut: keys[i],\n      method: method,\n      key: keys[i],\n      splitKey: splitKey,\n      element: element\n    });\n  } // 在全局document上设置快捷键\n\n\n  if (typeof element !== 'undefined' && !isElementBind(element) && window) {\n    elementHasBindEvent.push(element);\n    addEvent(element, 'keydown', function (e) {\n      dispatch(e, element);\n    }, capture);\n\n    if (!winListendFocus) {\n      winListendFocus = true;\n      addEvent(window, 'focus', function () {\n        _downKeys = [];\n      }, capture);\n    }\n\n    addEvent(element, 'keyup', function (e) {\n      dispatch(e, element);\n      clearModifier(e);\n    }, capture);\n  }\n}\n\nfunction trigger(shortcut) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n  Object.keys(_handlers).forEach(function (key) {\n    var data = _handlers[key].find(function (item) {\n      return item.scope === scope && item.shortcut === shortcut;\n    });\n\n    if (data && data.method) {\n      data.method();\n    }\n  });\n}\n\nvar _api = {\n  setScope: setScope,\n  getScope: getScope,\n  deleteScope: deleteScope,\n  getPressedKeyCodes: getPressedKeyCodes,\n  isPressed: isPressed,\n  filter: filter,\n  trigger: trigger,\n  unbind: unbind,\n  keyMap: _keyMap,\n  modifier: _modifier,\n  modifierMap: modifierMap\n};\n\nfor (var a in _api) {\n  if (Object.prototype.hasOwnProperty.call(_api, a)) {\n    hotkeys[a] = _api[a];\n  }\n}\n\nif (typeof window !== 'undefined') {\n  var _hotkeys = window.hotkeys;\n\n  hotkeys.noConflict = function (deep) {\n    if (deep && window.hotkeys === hotkeys) {\n      window.hotkeys = _hotkeys;\n    }\n\n    return hotkeys;\n  };\n\n  window.hotkeys = hotkeys;\n}\n\nexport { hotkeys as default };\n","import hotkeys from 'hotkeys-js';\nimport { useRef, useCallback, useEffect } from 'react';\n\n/**\r\n * @deprecated Use isHotkeyPressed instead. Will be removed version 4.\r\n */\n\nfunction useIsHotkeyPressed() {\n  return hotkeys.isPressed;\n}\n\nhotkeys.filter = function () {\n  return true;\n};\n\nvar tagFilter = function tagFilter(_ref, enableOnTags) {\n  var target = _ref.target;\n  var targetTagName = target && target.tagName;\n  return Boolean(targetTagName && enableOnTags && enableOnTags.includes(targetTagName));\n};\n\nvar isKeyboardEventTriggeredByInput = function isKeyboardEventTriggeredByInput(ev) {\n  return tagFilter(ev, ['INPUT', 'TEXTAREA', 'SELECT']);\n};\n\nfunction useHotkeys(keys, callback, options, deps) {\n  if (options instanceof Array) {\n    deps = options;\n    options = undefined;\n  }\n\n  var _ref2 = options || {},\n      enableOnTags = _ref2.enableOnTags,\n      filter = _ref2.filter,\n      keyup = _ref2.keyup,\n      keydown = _ref2.keydown,\n      _ref2$filterPreventDe = _ref2.filterPreventDefault,\n      filterPreventDefault = _ref2$filterPreventDe === void 0 ? true : _ref2$filterPreventDe,\n      _ref2$enabled = _ref2.enabled,\n      enabled = _ref2$enabled === void 0 ? true : _ref2$enabled,\n      _ref2$enableOnContent = _ref2.enableOnContentEditable,\n      enableOnContentEditable = _ref2$enableOnContent === void 0 ? false : _ref2$enableOnContent;\n\n  var ref = useRef(null); // The return value of this callback determines if the browsers default behavior is prevented.\n\n  var memoisedCallback = useCallback(function (keyboardEvent, hotkeysEvent) {\n    var _keyboardEvent$target;\n\n    if (filter && !filter(keyboardEvent)) {\n      return !filterPreventDefault;\n    } // Check whether the hotkeys was triggered inside an input and that input is enabled or if it was triggered by a content editable tag and it is enabled.\n\n\n    if (isKeyboardEventTriggeredByInput(keyboardEvent) && !tagFilter(keyboardEvent, enableOnTags) || (_keyboardEvent$target = keyboardEvent.target) != null && _keyboardEvent$target.isContentEditable && !enableOnContentEditable) {\n      return true;\n    }\n\n    if (ref.current === null || document.activeElement === ref.current) {\n      callback(keyboardEvent, hotkeysEvent);\n      return true;\n    }\n\n    return false;\n  }, deps ? [ref, enableOnTags, filter].concat(deps) : [ref, enableOnTags, filter]);\n  useEffect(function () {\n    if (!enabled) {\n      hotkeys.unbind(keys, memoisedCallback);\n      return;\n    } // In this case keydown is likely undefined, so we set it to false, since hotkeys needs the `keydown` key to have a value.\n\n\n    if (keyup && keydown !== true) {\n      options.keydown = false;\n    }\n\n    hotkeys(keys, options || {}, memoisedCallback);\n    return function () {\n      return hotkeys.unbind(keys, memoisedCallback);\n    };\n  }, [memoisedCallback, keys, enabled]);\n  return ref;\n}\n\nvar isHotkeyPressed = hotkeys.isPressed;\n\nexport { isHotkeyPressed, useHotkeys, useIsHotkeyPressed };\n//# sourceMappingURL=react-hotkeys-hook.esm.js.map\n"],"names":["baseFlatten","toInteger","module","exports","array","depth","length","undefined","isff","navigator","userAgent","toLowerCase","indexOf","addEvent","object","event","method","useCapture","addEventListener","attachEvent","concat","window","getMods","modifier","key","mods","slice","i","getKeys","keys","replace","split","index","lastIndexOf","splice","_keyMap","backspace","tab","clear","enter","return","esc","escape","space","left","up","right","down","del","delete","ins","insert","home","end","pageup","pagedown","capslock","num_0","num_1","num_2","num_3","num_4","num_5","num_6","num_7","num_8","num_9","num_multiply","num_add","num_enter","num_subtract","num_decimal","num_divide","_modifier","shift","alt","option","ctrl","control","cmd","command","modifierMap","shiftKey","ctrlKey","altKey","metaKey","_mods","_handlers","k","_downKeys","winListendFocus","_scope","elementHasBindEvent","code","x","toUpperCase","charCodeAt","setScope","scope","getScope","eachUnbind","_ref","_ref$splitKey","splitKey","forEach","originKey","unbindKeys","len","lastKey","keyCode","filter","record","a1","a2","arr1","arr2","isIndex","compareArray","eventHandler","handler","element","modifiersMatch","y","Object","prototype","hasOwnProperty","call","shortcut","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","asterisk","which","charCode","this","push","keyName","keyNum","e","getModifierState","type","keydown","keyup","_i","keyShortcut","_downKeysCurrent","a","sort","join","document","capture","toString","isElementBind","clearModifier","_api","deleteScope","newScope","handlers","getPressedKeyCodes","isPressed","target","srcElement","tagName","flag","isContentEditable","readOnly","trigger","arguments","data","find","item","unbind","keysInfo","Array","isArray","info","_len","args","_key","keyMap","_hotkeys","hotkeys","noConflict","deep","tagFilter","enableOnTags","targetTagName","Boolean","includes","useHotkeys","callback","options","deps","_ref2","_ref2$filterPreventDe","filterPreventDefault","_ref2$enabled","enabled","_ref2$enableOnContent","enableOnContentEditable","ref","useRef","memoisedCallback","useCallback","keyboardEvent","hotkeysEvent","_keyboardEvent$target","current","activeElement","useEffect"],"sourceRoot":""}