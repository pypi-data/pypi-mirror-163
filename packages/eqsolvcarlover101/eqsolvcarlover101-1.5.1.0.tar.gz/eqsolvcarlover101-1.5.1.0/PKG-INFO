Metadata-Version: 2.1
Name: eqsolvcarlover101
Version: 1.5.1.0
Summary: Automatic equation solver Use import eqsolve
Home-page: https://github.com/Carlover101/equation-solver
Author: Zakkai Thomas
Author-email: zmanmustang2017@gmail.com
License: UNKNOWN
Description: # Equation-Solver - Thank you for 10,000 downloads!!!
        
        [![PyPI Downloads](https://img.shields.io/pypi/dm/eqsolvcarlover101?label=PyPI%20Downloads)](
        https://pypi.org/project/eqsolvcarlover101/) [![Github Downloads](https://img.shields.io/github/downloads/Carlover101/equation-solver/total?label=Github%20Downloads)](https://github.com/Carlover101/equation-solver) [![Downloads](https://static.pepy.tech/personalized-badge/eqsolvcarlover101?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=Total%20Downloads)](https://pepy.tech/project/eqsolvcarlover101) [![Latest Version](https://img.shields.io/pypi/v/eqsolvcarlover101?label=Latest%20Version)](https://pypi.org/project/eqsolvcarlover101/) ![License](https://img.shields.io/badge/License-BSD-lightgray?label=License) ![GitHub Workflow Status](https://img.shields.io/github/workflow/status/Carlover101/equation-solver/CodeQL?label=Code%20Status)
        
        - [**Website**](https://github.com/Carlover101/equation-solver)
        - [**Bug Reports**](https://github.com/Carlover101/equation-solver/issues)
        - [**Email**](mailto:zmanmustang2017@gmail.com)
        - [**PyPI Page**](https://pypi.org/project/eqsolvcarlover101)
        - [**Documentation**](https://carlover101.github.io/equation-solver)
        
        
        ### Sidenote: Please read at least the last half of the readme if you are using versions 1.0 or lower, or you'll probably regret it later (It's not that long).
        
        This is a project that solves mathematic equations for you!
        
        Types:
        
        1. Quadratic
            - ***eqsolve.quadsolve()***
              > To type a square in python, you need to use a carrot **^** or two astrix **. (Ex. 2x^2 -5x +4)
        
        2. Slope Intercept
            - ***eqsolve.slopeint()***
              > Put in two points, and output an equation in slope-intercept form.
        
        3. Midpoint
            - _**eqsolve.midpoint()**_
              > Put in two points and output the midpoint.
        
        4. Perpendicular Lines
            - ***eqsolve.perpint()***
              > Put in the slope of a line, and the intersection point, and get the slope-intercept equation of the perpendicular line.
        
        5. Similar Shapes Check
            - ***eqsolve.issim()***
              > Takes the lengths of the sides of one shape and the corresponding side lengths of the sides of a second shape.
              > 
              > If the shapes are similar, it will return the scale factor.
        
        6. Missing Right Triangle Lengths
           - ***eqsolve.findright()***
             > Finds the missing length of a right triangle.
        
        Other Commands:
        
        1. Command List
            - ***eqsolve.commands()***
        
        2. Help
            - ***eqsolve.help()***
        
        
        ## Version Info:
        
        #### V0.1.5.9 and before:
          - Don't even try to use these. They don't do anything...
        
        #### V0.1.6 - V0.2:
          - You can actually import everything correctly now without errors!!
        
        #### V1.0:
          - First official release.
          - Contains quadratic and slope-intercept equation solvers.
        
        #### V1.1:
          - You dont have to do any weird importing anymore! ***import eqsolvcarlover101*** works!!!
        
        #### V1.1.1 - V1.1.2:
          - I just forgot to update the readme correctly. The code is the exact same.
        
        #### V1.1.3
          - License and Readme updates.
        
        #### V1.1.4
          - Python version requirement updates.
        
        #### V1.1.5
          - Includes link to new documentation and some readme updates.
        
        #### V1.2
          - Added _**eqsolvcarlover101.midpoint()**_.
        
        #### V1.2.1
          - Updated the _**eqsolvcarlover101.commands()**_ and _**eqsolvcarlover101.help()**_ functions.
        
        #### V1.3
          - Added the _**eqsolvcarlover101.perpint()**_ function and updated the _**eqsolvcarlover101.commands()**_ function.
        
        #### V1.3.1
          - Fixed an issue with the _**eqsolvcarlover101.commands()**_ function.
        
        #### V1.4
          - Added the _**eqolvcarlover101.issim()**_ function and updated the _**eqsolvcarlover101.commands()**_ function.
        
        #### V1.5
          - Added the _**eqsolvcarlover101.findright()**_ function and updated the _**eqsolvcarlover101.commands()**_ function.
        
        #### V1.5.1.0
          - Changed the package name from _**eqsolvcarlover101**_ to _**eqsolve**_.
          - Updated the _**eqsolve.commands()**_ function.
          - Updated the _**eqsolve.help()**_ function.
          - Fixed a text error in the _**eqsolve.issim()**_ function.
          - Updated README.MD.
          - Updated package description.
        
        ## Helpful Info:
        
        - When importing the package, if you are using versions 1.0 or lower, use ***import eqsolvcarlover101.equation*** instead because I hadn't figured out how to make it so you didn't have to do that yet. It just doesn't work otherwise.
        
        - If you are using versions 1.1 - 1.5.1, then you cannot use _**import eqsolve.***_, instead use _**import eqsolvcarlover101.***_.
        
        ## Thanks to all for using my work!
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
