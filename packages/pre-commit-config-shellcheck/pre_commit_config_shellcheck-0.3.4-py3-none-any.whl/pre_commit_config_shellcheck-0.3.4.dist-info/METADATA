Metadata-Version: 2.1
Name: pre-commit-config-shellcheck
Version: 0.3.4
Summary: Tool for checking entry points in the pre-commit config with ShellCheck.
Home-page: https://github.com/anadea/pre-commit-config-shellcheck/
Author: Anadea
Author-email: python-dev@anadeainc.com
License: MIT
Keywords: pre-commit,shellcheck,config,pre-commit-config,pre-commit-shellcheck
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Plugins
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Utilities
Description-Content-Type: text/x-rst
License-File: MIT-LICENSE
Requires-Dist: pyyaml (>=6.0)
Requires-Dist: shellcheck-py (>=0.8.0.4)
Provides-Extra: test
Requires-Dist: bandit (==1.7.4) ; extra == 'test'
Requires-Dist: black (==22.6.0) ; extra == 'test'
Requires-Dist: bpython (==0.22.1) ; extra == 'test'
Requires-Dist: check-manifest (==0.48) ; extra == 'test'
Requires-Dist: check-wheel-contents (==0.3.4) ; extra == 'test'
Requires-Dist: coverage (==6.4.3) ; extra == 'test'
Requires-Dist: coveralls (==3.3.1) ; extra == 'test'
Requires-Dist: darglint (==1.8.1) ; extra == 'test'
Requires-Dist: dlint (==0.13.0) ; extra == 'test'
Requires-Dist: dodgy (==0.2.1) ; extra == 'test'
Requires-Dist: dotenv-linter (==0.3.0) ; extra == 'test'
Requires-Dist: flake8-annotations-complexity (==0.0.7) ; extra == 'test'
Requires-Dist: flake8-annotations-coverage (==0.0.6) ; extra == 'test'
Requires-Dist: flake8-broken-line (==0.5.0) ; extra == 'test'
Requires-Dist: flake8-bugbear (==22.7.1) ; extra == 'test'
Requires-Dist: flake8-builtins (==1.5.3) ; extra == 'test'
Requires-Dist: flake8-coding (==1.3.2) ; extra == 'test'
Requires-Dist: flake8-cognitive-complexity (==0.1.0) ; extra == 'test'
Requires-Dist: flake8-comprehensions (==3.10.0) ; extra == 'test'
Requires-Dist: flake8-debugger (==4.1.2) ; extra == 'test'
Requires-Dist: flake8-docstrings (==1.6.0) ; extra == 'test'
Requires-Dist: flake8-eradicate (==1.3.0) ; extra == 'test'
Requires-Dist: flake8-executable (==2.1.1) ; extra == 'test'
Requires-Dist: flake8-expression-complexity (==0.0.11) ; extra == 'test'
Requires-Dist: flake8-fixme (==1.1.1) ; extra == 'test'
Requires-Dist: flake8-functions (==0.0.7) ; extra == 'test'
Requires-Dist: flake8-mutable (==1.2.0) ; extra == 'test'
Requires-Dist: flake8-no-implicit-concat (==0.3.3) ; extra == 'test'
Requires-Dist: flake8-print (==5.0.0) ; extra == 'test'
Requires-Dist: flake8-return (==1.1.3) ; extra == 'test'
Requires-Dist: flake8-simplify (==0.19.3) ; extra == 'test'
Requires-Dist: flake8-typing-imports (==1.13.0) ; extra == 'test'
Requires-Dist: flake8-use-fstring (==1.4) ; extra == 'test'
Requires-Dist: flake8-variables-names (==0.0.5) ; extra == 'test'
Requires-Dist: flake8 (==5.0.4) ; extra == 'test'
Requires-Dist: interrogate (==1.5.0) ; extra == 'test'
Requires-Dist: isort (==5.10.1) ; extra == 'test'
Requires-Dist: mypy (==0.971) ; extra == 'test'
Requires-Dist: pep8-naming (==0.13.1) ; extra == 'test'
Requires-Dist: pip-outdated (==0.5.0) ; extra == 'test'
Requires-Dist: pre-commit (==2.20.0) ; extra == 'test'
Requires-Dist: pre-commit-hooks (==4.3.0) ; extra == 'test'
Requires-Dist: pylint (==2.14.5) ; extra == 'test'
Requires-Dist: pyroma (==4.0) ; extra == 'test'
Requires-Dist: pytest-cov (==3.0.0) ; extra == 'test'
Requires-Dist: pytest-extra-durations (==0.1.3) ; extra == 'test'
Requires-Dist: pytest-mock (==3.8.2) ; extra == 'test'
Requires-Dist: pytest-instafail (==0.4.2) ; extra == 'test'
Requires-Dist: pytest-sugar (==0.9.5) ; extra == 'test'
Requires-Dist: pytest-timer[termcolor] (==0.0.11) ; extra == 'test'
Requires-Dist: pytest (==7.1.2) ; extra == 'test'
Requires-Dist: removestar (==1.3.1) ; extra == 'test'
Requires-Dist: rstcheck (==6.1.0) ; extra == 'test'
Requires-Dist: seed-isort-config (==2.2.0) ; extra == 'test'
Requires-Dist: tox-gh-actions (==2.9.1) ; extra == 'test'
Requires-Dist: tox-pyenv (==1.1.0) ; extra == 'test'
Requires-Dist: tox (==3.25.1) ; extra == 'test'
Requires-Dist: twine (==4.0.1) ; extra == 'test'
Requires-Dist: types-PyYAML (==6.0.11) ; extra == 'test'
Requires-Dist: wheel (==0.37.1) ; extra == 'test'
Requires-Dist: yesqa (==1.4.0) ; extra == 'test'

pre-commit-config-shellcheck documentation
==========================================

|GitHub|_ |Coveralls|_ |pypi-license|_ |pypi-version|_ |pypi-python-version|_ |pypi-format|_ |pypi-wheel|_ |pypi-status|_

*pre-commit-config-shellcheck is a tool for checking entry points in the pre-commit config with ShellCheck.*

.. contents::

Installation
------------
In order to use the tool you should first clone it from the source:

.. code-block:: bash

    $ git clone https://github.com/Anadea/pre-commit-config-shellcheck.git

Then you should install project dependencies with

.. code-block:: bash

    $ python ./setup.py install

or

.. code-block:: bash

    $ pip install pre-commit-config-shellcheck

The installation is done and as simple as that.

Usage
-----
To run the program you should start it from the terminal and provide a config file to check:

.. code-block:: bash

    $ pre_commit_config_shellcheck.py .pre-commit-config.yaml

You could change a default ShellCheck call with directory access with the ``-s`` or ``--shellcheck`` argument:

.. code-block:: bash

    $ pre_commit_config_shellcheck.py .pre-commit-config.yaml -s /bin/shellcheck

The output from tool usage is sent to the stdout or stderr depending on the operation result.

Usage as a pre-commit hook
--------------------------
Also, it can be used as a `pre-commit <https://pre-commit.com/>`_ hook out of the box. Just add it to yours ``.pre-commit-config.yaml``:

.. code-block:: yaml

  - repo: "https://github.com/Anadea/pre-commit-config-shellcheck"
    rev: "0.3.4"
      hooks:
        - id: "pre-commit-config-shellcheck"

Usage as GitHub action
----------------------
Also, it can be used as a `GitHub action <https://github.com/features/actions/>`_ out of the box. Just add it to yours workflow:

.. code-block:: yaml

  - name: "pre-commit-config-shellcheck"
    uses: "actions/pre-commit-config-shellcheck@0.3.4"
    id: "pre-commit-config-shellcheck"
    with:
      config: ".pre-commit-config.yaml"


Contributing
------------

- `Fork it <https://github.com/Anadea/pre-commit-config-shellcheck/>`_
- Install `GNU Make <https://www.gnu.org/software/make/>`_
- Install and configure `pyenv <https://github.com/pyenv/pyenv/>`_ and `pyenv-virtualenv plugin <https://github.com/pyenv/pyenv-virtualenv/>`_
- Install and configure `direnv <https://github.com/direnv/direnv/>`_
- Create environment config from the example

.. code-block:: bash

    cp .env.example .env

- Install development dependencies:

.. code-block:: bash

    make install

- Create your fix/feature branch:

.. code-block:: bash

    git checkout -b my-new-fix-or-feature

- Check code style and moreover:

.. code-block:: bash

    make check

- Run tests:

.. code-block:: bash

    make test

- Push to the branch:

.. code-block:: bash

    git push origin my-new-fix-or-feature

- `Create a new Pull Request <https://github.com/Anadea/pre-commit-config-shellcheck/compare/>`_


Licensing
---------
pre-commit-config-shellcheck uses the MIT license. Please check the MIT-LICENSE file for more details.


Contacts
--------
**Project Website**: https://github.com/Anadea/pre-commit-config-shellcheck/

**Author**: Anadea

For contributors list see CONTRIBUTORS file.


.. |GitHub| image:: https://github.com/Anadea/pre-commit-config-shellcheck/workflows/build/badge.svg
    :alt: GitHub
.. |Coveralls| image:: https://coveralls.io/repos/github/Anadea/pre-commit-config-shellcheck/badge.svg?branch=master
    :alt: Coveralls
.. |pypi-license| image:: https://img.shields.io/pypi/l/pre-commit-config-shellcheck
    :alt: License
.. |pypi-version| image:: https://img.shields.io/pypi/v/pre-commit-config-shellcheck
    :alt: Version
.. |pypi-python-version| image:: https://img.shields.io/pypi/pyversions/pre-commit-config-shellcheck
    :alt: Supported Python version
.. |pypi-format| image:: https://img.shields.io/pypi/format/pre-commit-config-shellcheck
    :alt: Package format
.. |pypi-wheel| image:: https://img.shields.io/pypi/wheel/pre-commit-config-shellcheck
    :alt: Python wheel support
.. |pypi-status| image:: https://img.shields.io/pypi/status/pre-commit-config-shellcheck
    :alt: Package status
.. _GitHub: https://github.com/Anadea/pre-commit-config-shellcheck/actions/
.. _Coveralls: https://coveralls.io/github/Anadea/pre-commit-config-shellcheck?branch=master
.. _pypi-license: https://pypi.org/project/pre-commit-config-shellcheck/
.. _pypi-version: https://pypi.org/project/pre-commit-config-shellcheck/
.. _pypi-python-version: https://pypi.org/project/pre-commit-config-shellcheck/
.. _pypi-format: https://pypi.org/project/pre-commit-config-shellcheck/
.. _pypi-wheel: https://pypi.org/project/pre-commit-config-shellcheck/
.. _pypi-status: https://pypi.org/project/pre-commit-config-shellcheck/


