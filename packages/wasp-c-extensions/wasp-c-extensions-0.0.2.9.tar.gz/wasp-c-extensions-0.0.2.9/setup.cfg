[metadata]
name = wasp-c-extensions
url = https://github.com/a1ezzz/wasp-c-extensions
description = A library with bunch of CPython extensions
author = Ildar Gafurov
author_email = dev@binblob.com
maintainer = Ildar Gafurov
maintainer_email = dev@binblob.com
license = GNU Lesser General Public License v3
long_description = file: README.md, CHANGELOG
long_description_content_type = text/markdown
version = attr:wasp_c_extensions.version.__version__
keywords = wasp c-extensions threading threads
classifiers = 
	Development Status :: 2 - Pre-Alpha
	Intended Audience :: Developers
	License :: OSI Approved :: GNU General Public License v3 (GPLv3)
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: Implementation :: CPython
	Programming Language :: Python :: Implementation :: PyPy
	Topic :: Software Development :: Libraries
	Topic :: Software Development :: Libraries :: Python Modules

[options]
zip_safe = False
packages = find:
setup_requires = pytest-runner
install_requires = 
tests_require = 
	pytest>=4
	pytest-html<2.0.0

[options.extras_require]
dev = 
	twine
test = 
	pytest>=4
	pytest-html<2.0.0
all = wasp-c-extensions[dev,test]

[extension=wasp_c_extensions.threads]
sources = 
	wasp_c_extensions/_threads/threads_module.c
	wasp_c_extensions/_threads/atomic.c
	wasp_c_extensions/_threads/event.cpp
	wasp_c_extensions/_threads/event_wrapper.cpp
macros = 
	__PACKAGE_NAME__ = wasp_c_extensions
	__MODULE_NAME__ = threads
	__THREADS_MODULE_NAME__ = threads
	__ATOMIC_COUNTER_NAME__ = WAtomicCounter
	__PTHREAD_EVENT_NAME__ = WPThreadEvent
	__DEFAULT_SIGNALS_POLLING_TIMEOUT__ = 10
include_dirs = 
	wasp_c_extensions
depends = 
	wasp_c_extensions/_threads/atomic.h
	wasp_c_extensions/_threads/event.hpp
	wasp_c_extensions/_threads/event_wrapper.h
	wasp_c_extensions/common.h
	wasp_c_extensions/static_functions.h
extra_compile_args = -Wall

[extension=wasp_c_extensions.queue]
sources = 
	wasp_c_extensions/_queue/queue_module.c
	wasp_c_extensions/_queue/mcqueue.c
	wasp_c_extensions/_queue/subscriber.c
macros = 
	__PACKAGE_NAME__ = wasp_c_extensions
	__QUEUE_MODULE_NAME__ = queue
	__MCQUEUE_NAME__ = WMCQueue
	__MCQUEUE_SUBSCRIBER_NAME__ = WMCQueueSubscriber
include_dirs = 
	wasp_c_extensions
depends = 
	wasp_c_extensions/_queue/mcqueue.h
	wasp_c_extensions/_queue/subscriber.h
	wasp_c_extensions/common.h
extra_compile_args = -Wall

[extension=wasp_c_extensions.cmcqueue]
sources = 
	wasp_c_extensions/_cmcqueue/cmcqueue_module.c
	wasp_c_extensions/_cmcqueue/cmcqueue.cpp
	wasp_c_extensions/_cmcqueue/cmcqueue_wrapper.cpp
macros = 
	__PACKAGE_NAME__ = wasp_c_extensions
	__MODULE_NAME__ = cmcqueue
	__CMCQUEUE_NAME__ = WCMCQueue
	__CMCQUEUE_ITEM_NAME__ = WCMCQueueItem
include_dirs = 
	wasp_c_extensions
depends = 
	wasp_c_extensions/_cmcqueue/cmcqueue.hpp
	wasp_c_extensions/_cmcqueue/cmcqueue_wrapper.h
	wasp_c_extensions/common.h
	wasp_c_extensions/module_common.h
extra_compile_args = -Wall

[extension=wasp_c_extensions.ev_loop]
sources = 
	wasp_c_extensions/_ev_loop/ev_loop.cpp
	wasp_c_extensions/_ev_loop/ev_loop_wrapper.cpp
	wasp_c_extensions/_ev_loop/ev_loop_module.c
	wasp_c_extensions/_threads/event.cpp
macros = 
	__PACKAGE_NAME__ = wasp_c_extensions
	__MODULE_NAME__ = ev_loop
	__EVENT_LOOP_NAME__ = WEventLoop
	__CMCMODULE_NAME__ = cmcqueue
	__CMCQUEUE_NAME__ = WCMCQueue
include_dirs = 
	wasp_c_extensions
depends = 
	wasp_c_extensions/_ev_loop/ev_loop.hpp
	wasp_c_extensions/_cmcqueue/cmcqueue.hpp
	wasp_c_extensions/_threads/event.hpp
	wasp_c_extensions/_ev_loop/ev_loop_wrapper.h
	wasp_c_extensions/common.h
	wasp_c_extensions/module_common.h
extra_compile_args = -Wall

[aliases]
test = pytest

[tool:pytest]
python_files = tests/*.py
addopts = -v --html=docs/pytest/index.html --capture=sys

[egg_info]
tag_build = 
tag_date = 0

